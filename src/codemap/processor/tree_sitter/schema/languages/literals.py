"""
Auto-generated file. DO NOT EDIT MANUALLY.

Generated by scripts/analyze_node_types.py on 2025-05-13 12:25:48.

Contains literals for supported languages, node types, and language extensions.
"""

# ruff: noqa: RUF001
from typing import Literal

SupportedLanguages = Literal[
	# Supported programming languages (auto-generated)
	"agda",
	"bash",
	"c",
	"cpp",
	"csharp",
	"css",
	"embeddedtemplate",
	"go",
	"haskell",
	"html",
	"java",
	"javascript",
	"jsdoc",
	"json",
	"julia",
	"ocaml",
	"php",
	"python",
	"ruby",
	"rust",
	"scala",
	"swift",
	"toml",
	"typescript",
	"verilog",
]

NodeTypes = Literal[
	# All node types from all grammars (auto-generated)
	"\0",
	"\\n",
	"!",
	"!=",
	"!==",
	"!=?",
	"!~",
	'"',
	'""',
	'"""',
	'"DPI"',
	'"DPI-C"',
	"#",
	"##",
	"##[*]",
	"##[+]",
	"#)",
	"#-#",
	"#-}",
	"#0",
	"#=#",
	"#[",
	"#available",
	"#define",
	"#elif",
	"#elifdef",
	"#elifndef",
	"#else",
	"#elseif",
	"#endif",
	"#endregion",
	"#error",
	"#if",
	"#ifdef",
	"#ifndef",
	"#include",
	"#line",
	"#nullable",
	"#pragma",
	"#region",
	"#undef",
	"#warning",
	"#{",
	"$",
	"$$",
	"$(",
	"$((",
	"$=",
	"$[",
	"$`",
	"$error",
	"$fatal",
	"$fullskew",
	"$fullskew_timing_check",
	"$hold",
	"$hold_timing_check",
	"$info",
	"$nochange",
	"$nochange_timing_check",
	"$period",
	"$period_timing_check",
	"$recovery",
	"$recovery_timing_check",
	"$recrem",
	"$recrem_timing_check",
	"$removal",
	"$removal_timing_check",
	"$root",
	"$setup",
	"$setup_timing_check",
	"$setuphold",
	"$setuphold_timing_check",
	"$skew",
	"$skew_timing_check",
	"$timeskew",
	"$timeskew_timing_check",
	"$unit",
	"$warning",
	"$width",
	"$width_timing_check",
	"${",
	"%",
	"%%",
	"%%>",
	"%=",
	"%>",
	"%i(",
	"%w(",
	"&",
	"&&",
	"&&&",
	"&&=",
	"&.",
	"&=",
	"&>",
	"&>>",
	"&^",
	"&^=",
	"'",
	"''",
	"'''",
	"'0",
	"'1",
	"'B0",
	"'B1",
	"'b0",
	"'b1",
	"'{",
	"(",
	"(#",
	"((",
	"()",
	"(*",
	"(?",
	"(?:",
	"(?<",
	"(?P<",
	"(?P=",
	"(|",
	")",
	"))",
	"*",
	"*)",
	"**",
	"**=",
	"*/",
	"*::*",
	"*=",
	"*>",
	"+",
	"++",
	"+:",
	"+=",
	"+?:",
	"+@",
	",",
	",,",
	"-",
	"-%>",
	"--",
	"-:",
	"-=",
	"->",
	"->*",
	"->.",
	"->>",
	"-?:",
	"-@",
	"-a",
	"-o",
	".",
	".*",
	"..",
	"...",
	"..=",
	".=",
	"/",
	"/#",
	"/%",
	"/*",
	"//",
	"//=",
	"/=",
	"/>",
	"0",
	"01",
	"1",
	"1'B0",
	"1'B1",
	"1'BX",
	"1'Bx",
	"1'b0",
	"1'b1",
	"1'bX",
	"1'bx",
	"10",
	"1step",
	"2",
	":",
	':"',
	":+",
	":-",
	":/",
	"::",
	":=",
	":>",
	":?",
	":]",
	";",
	";&",
	";;",
	";;&",
	"<",
	"<!",
	"<%",
	"<%#",
	"<%%",
	"<%-",
	"<%=",
	"<%==",
	"<%_",
	"<%graphql",
	"<%|",
	"<%|=",
	"<%|==",
	"<&",
	"<&-",
	"<(",
	"<-",
	"<->",
	"</",
	"<:",
	"<<",
	"<<-",
	"<<<",
	"<<<=",
	"<<=",
	"<=",
	"<=>",
	"<>",
	"=",
	"=%>",
	"==",
	"===",
	"==?",
	"=>",
	"=>>",
	"=~",
	">",
	">&",
	">&-",
	">(",
	">:",
	">=",
	">>",
	">>=",
	">>>",
	">>>=",
	">|",
	">}",
	"?",
	"?->",
	"?.",
	"?:",
	"?=>",
	"?>",
	"??",
	"??=",
	"@",
	"@*",
	"@=",
	"@@",
	"@charset",
	"@import",
	"@interface",
	"@keyframes",
	"@media",
	"@namespace",
	"@supports",
	"A",
	"Array",
	"BEGIN",
	"CATCHALL",
	"Cdecl",
	"Dictionary",
	"E",
	"END",
	"Fastcall",
	"K",
	"L",
	'L"',
	"L'",
	'LR"',
	"Linux",
	"NULL",
	"P",
	"PATHPULSE$=",
	"Prop",
	"PropN",
	"Q",
	'R"',
	"Set",
	"SetN",
	"Stdcall",
	"Thiscall",
	"U",
	'U"',
	"U'",
	'UR"',
	"[",
	"[%",
	"[%%",
	"[*",
	"[*]",
	"[+]",
	"[->",
	"[:",
	"[<",
	"[=",
	"[>",
	"[@",
	"[@@",
	"[@@@",
	"[[",
	"[]",
	"[]=",
	"[|",
	"[–>",
	"\\",
	"\\k",
	"\\{",
	"]",
	"]]",
	"^",
	"^=",
	"^^",
	"^~",
	"_",
	"_%>",
	"_Alignas",
	"_Alignof",
	"_Atomic",
	"_Generic",
	"_Nonnull",
	"_Noreturn",
	"__alignof",
	"__alignof__",
	"__asm",
	"__asm__",
	"__attribute",
	"__attribute__",
	"__based",
	"__cdecl",
	"__clrcall",
	"__declspec",
	"__except",
	"__extension__",
	"__fastcall",
	"__finally",
	"__forceinline",
	"__future__",
	"__inline",
	"__inline__",
	"__leave",
	"__makeref",
	"__reftype",
	"__refvalue",
	"__restrict__",
	"__stdcall",
	"__thiscall",
	"__thread",
	"__try",
	"__unaligned",
	"__vectorcall",
	"__volatile__",
	"_abstract_declarator",
	"_alignof",
	"_arg",
	"_binding_pattern",
	"_call_operator",
	"_class_expression",
	"_class_field",
	"_class_field_specification",
	"_class_type",
	"_compound_statement",
	"_constant",
	"_declaration_statement",
	"_declarator",
	"_definition",
	"_effect_pattern",
	"_end_ident",
	"_expression",
	"_field_declarator",
	"_infix_operator",
	"_lhs",
	"_literal",
	"_literal_pattern",
	"_method_name",
	"_module_expression",
	"_module_type",
	"_nonlocal_variable",
	"_ordered_parameter_assignment",
	"_parameter",
	"_pattern",
	"_pattern_constant",
	"_pattern_expr",
	"_pattern_expr_basic",
	"_pattern_primitive",
	"_pattern_top_expr_body",
	"_polymorphic_type",
	"_primary",
	"_primary_expression",
	"_sequence_expression",
	"_signature_item",
	"_signed_constant",
	"_simple_class_expression",
	"_simple_class_type",
	"_simple_expression",
	"_simple_module_expression",
	"_simple_numeric",
	"_simple_pattern",
	"_simple_statement",
	"_simple_type",
	"_statement",
	"_structure_item",
	"_type",
	"_type_declarator",
	"_unaligned",
	"_unannotated_type",
	"_value",
	"_variable",
	"`",
	"``",
	"```",
	"a",
	"abstract",
	"abstract_array_declarator",
	"abstract_class_declaration",
	"abstract_definition",
	"abstract_family",
	"abstract_function_declarator",
	"abstract_method_signature",
	"abstract_modifier",
	"abstract_parenthesized_declarator",
	"abstract_pointer_declarator",
	"abstract_reference_declarator",
	"abstract_type",
	"accept_on",
	"access_modifier",
	"access_qualifier",
	"access_specifier",
	"accessibility_modifier",
	"accessor",
	"accessor_declaration",
	"accessor_list",
	"action_block",
	"add",
	"add_expr",
	"add_operator",
	"adding_type_annotation",
	"addop",
	"adjacent_sibling_selector",
	"adjoint_expression",
	"aggId",
	"aggregate",
	"alias",
	"alias_declaration",
	"alias_pattern",
	"alias_qualified_name",
	"aliased_import",
	"aliased_type",
	"alignas",
	"alignas_qualifier",
	"alignof",
	"alignof_expression",
	"all_names",
	"alternation",
	"alternative",
	"alternative_pattern",
	"alternatives",
	"always",
	"always_comb",
	"always_construct",
	"always_ff",
	"always_keyword",
	"always_latch",
	"ambient_declaration",
	"anchor",
	"and",
	"and_eq",
	"and_operator",
	"and_pattern",
	"annotArg",
	"annotName",
	"annotated",
	"annotated_type",
	"annotation",
	"annotation_argument_list",
	"annotation_type_body",
	"annotation_type_declaration",
	"annotation_type_element_declaration",
	"annotations",
	"anonymous_capturing_group",
	"anonymous_class",
	"anonymous_function",
	"anonymous_function_use_clause",
	"anonymous_leaf",
	"anonymous_method_expression",
	"anonymous_object_creation_expression",
	"anonymous_program",
	"anonymous_program_item",
	"ansi_c_string",
	"ansi_port_declaration",
	"any",
	"any_character",
	"anyclass",
	"application_expression",
	"apply",
	"arch",
	"argsAnnotation",
	"argument",
	"argument_list",
	"arguments",
	"arithmetic_expansion",
	"arithmetic_sequence",
	"aritylessPredicateExpr",
	"arm",
	"arm64",
	"array",
	"array_access",
	"array_binding_pattern",
	"array_creation_expression",
	"array_declarator",
	"array_element_initializer",
	"array_expression",
	"array_get_expression",
	"array_initializer",
	"array_manipulation_call",
	"array_method_name",
	"array_pattern",
	"array_range_expression",
	"array_rank_specifier",
	"array_type",
	"arrow_expression_clause",
	"arrow_function",
	"arrow_function_expression",
	"arrow_renamed_identifier",
	"as",
	"asExpr",
	"asExprs",
	"as_expression",
	"as_pattern",
	"as_pattern_target",
	"as_renamed_identifier",
	"asc",
	"ascending",
	"ascription_expression",
	"asm",
	"assembly",
	"assert",
	"assert_expression",
	"assert_property_statement",
	"assert_statement",
	"assertion_variable_declaration",
	"asserts",
	"asserts_annotation",
	"assign",
	"assign_operator",
	"assignment",
	"assignment_expression",
	"assignment_operator",
	"assignment_pattern",
	"assignment_pattern_expression",
	"assignment_pattern_key",
	"assignment_pattern_net_lvalue",
	"assignment_pattern_variable_lvalue",
	"assignment_statement",
	"associated_type",
	"associatedtype",
	"associatedtype_declaration",
	"associative_dimension",
	"associativity",
	"associativity_clause",
	"assume",
	"assume_property_statement",
	"asterisk",
	"async",
	"async_block",
	"at_keyword",
	"at_rule",
	"atom",
	"attr_spec",
	"attribute",
	"attribute_argument",
	"attribute_argument_list",
	"attribute_declaration",
	"attribute_group",
	"attribute_id",
	"attribute_instance",
	"attribute_item",
	"attribute_list",
	"attribute_name",
	"attribute_payload",
	"attribute_selector",
	"attribute_specifier",
	"attribute_target_specifier",
	"attribute_value",
	"attributed_declarator",
	"attributed_statement",
	"attributes",
	"augmented_assignment",
	"augmented_assignment_expression",
	"auto",
	"automatic",
	"availability_condition",
	"avg",
	"await",
	"await_expression",
	"backreference_escape",
	"bare_key",
	"bare_string",
	"bare_symbol",
	"baremodule",
	"base",
	"base_class_clause",
	"base_clause",
	"base_field_initializer",
	"base_list",
	"before",
	"begin",
	"begin_block",
	"begin_keywords",
	"bid",
	"bigarray_get_expression",
	"binary",
	"binary_expression",
	"binary_integer_literal",
	"binary_number",
	"binary_operator",
	"binary_query",
	"bind",
	"bind_directive",
	"bind_target_instance",
	"bind_target_instance_list",
	"bind_target_scope",
	"binding",
	"binding_list",
	"bindings",
	"bins",
	"bins_expression",
	"bins_keyword",
	"bins_or_empty",
	"bins_or_options",
	"bins_selection",
	"bins_selection_or_option",
	"binsof",
	"bit",
	"bit_select1",
	"bitand",
	"bitfield_clause",
	"bitor",
	"blank_identifier",
	"block",
	"block_argument",
	"block_body",
	"block_comment",
	"block_event_expression",
	"block_item_declaration",
	"block_parameter",
	"block_parameters",
	"blocking_assignment",
	"body",
	"body_statement",
	"bool",
	"boolean",
	"boolean_literal",
	"boolean_operator",
	"boolean_type",
	"bottom_type",
	"boundary_assertion",
	"bounded_type",
	"brace_expression",
	"bracketed_argument_list",
	"bracketed_parameter_list",
	"bracketed_type",
	"branch",
	"break",
	"break_expression",
	"break_statement",
	"broadcast_call_expression",
	"buf",
	"bufif0",
	"bufif1",
	"build_configuration_statement",
	"by",
	"by_ref",
	"byte",
	"c_identifier",
	"c_style_for_statement",
	"call",
	"call_body",
	"call_expression",
	"call_or_unqual_agg_expr",
	"call_signature",
	"callable",
	"calling_convention",
	"canImport",
	"capture",
	"capture_pattern",
	"captured_pattern",
	"case",
	"caseDecl",
	"case_block",
	"case_class_pattern",
	"case_clause",
	"case_condition",
	"case_declaration",
	"case_expression",
	"case_generate_construct",
	"case_generate_item",
	"case_inside_item",
	"case_item",
	"case_item_expression",
	"case_keyword",
	"case_match",
	"case_pattern",
	"case_pattern_item",
	"case_statement",
	"cases",
	"casex",
	"casez",
	"cast",
	"cast_expression",
	"cast_type",
	"casting_type",
	"catch",
	"catch_clause",
	"catch_declaration",
	"catch_filter_clause",
	"catch_formal_parameter",
	"catch_type",
	"catchall_pragma",
	"chained_string",
	"chan",
	"chandle",
	"channel_type",
	"char",
	"char_literal",
	"character",
	"character_class",
	"character_class_escape",
	"character_content",
	"character_literal",
	"character_literal_content",
	"charge_strength",
	"charpred",
	"charset_statement",
	"checked",
	"checked_expression",
	"checked_statement",
	"checker",
	"checker_declaration",
	"checker_identifier",
	"checker_instantiation",
	"checker_or_generate_item_declaration",
	"checker_port_direction",
	"checker_port_item",
	"checker_port_list",
	"checksum",
	"chevron",
	"child",
	"child_selector",
	"children",
	"choice",
	"class",
	"classMember",
	"className",
	"class_application",
	"class_binding",
	"class_body",
	"class_body_type",
	"class_character",
	"class_constant_access_expression",
	"class_constructor_declaration",
	"class_constructor_prototype",
	"class_decl",
	"class_declaration",
	"class_declarations",
	"class_definition",
	"class_function",
	"class_function_type",
	"class_heritage",
	"class_identifier",
	"class_initializer",
	"class_interface_clause",
	"class_item",
	"class_item_qualifier",
	"class_literal",
	"class_method",
	"class_name",
	"class_new",
	"class_parameter",
	"class_parameters",
	"class_path",
	"class_pattern",
	"class_property",
	"class_qualifier",
	"class_range",
	"class_scope",
	"class_selector",
	"class_specifier",
	"class_static_block",
	"class_type",
	"class_type_binding",
	"class_type_definition",
	"class_type_name",
	"class_type_path",
	"class_variable",
	"classlessPredicate",
	"clocking",
	"clocking_decl_assign",
	"clocking_declaration",
	"clocking_direction",
	"clocking_drive",
	"clocking_event",
	"clocking_identifier",
	"clocking_item",
	"clocking_skew",
	"clockvar",
	"clockvar_expression",
	"clone",
	"clone_expression",
	"closure",
	"closure_expression",
	"closure_parameters",
	"cmos",
	"cmos_switch_instance",
	"cmos_switchtype",
	"co_await",
	"co_await_expression",
	"co_return",
	"co_return_statement",
	"co_yield",
	"co_yield_statement",
	"codata",
	"code",
	"coercion_expression",
	"coinductive",
	"colType",
	"colon_argument",
	"colon_block",
	"color_value",
	"column",
	"combinational_body",
	"combinational_entry",
	"comma_expression",
	"command",
	"command_literal",
	"command_name",
	"command_substitution",
	"comment",
	"comment_directive",
	"communication_case",
	"comp_term",
	"compact_constructor_declaration",
	"comparison_operator",
	"compilation_unit",
	"compiler",
	"compl",
	"complex",
	"complex_pattern",
	"compop",
	"composite_literal",
	"compound_assignment_expr",
	"compound_assignment_expression",
	"compound_literal_expression",
	"compound_requirement",
	"compound_statement",
	"compound_type",
	"comprehension_expression",
	"computed_property_name",
	"concat",
	"concat_operator",
	"concatenated_string",
	"concatenation",
	"concept",
	"concept_definition",
	"concurrent_assertion_item",
	"cond_pattern",
	"cond_predicate",
	"condition_clause",
	"conditional",
	"conditional_access_expression",
	"conditional_expression",
	"conditional_statement",
	"conditional_type",
	"conjunction",
	"cons_expression",
	"cons_pattern",
	"consecutive_repetition",
	"const",
	"const_block",
	"const_declaration",
	"const_element",
	"const_identifier",
	"const_item",
	"const_parameter",
	"const_spec",
	"const_statement",
	"constant",
	"constant_bit_select1",
	"constant_concatenation",
	"constant_declaration",
	"constant_expression",
	"constant_indexed_range",
	"constant_mintypmax_expression",
	"constant_multiple_concatenation",
	"constant_param_expression",
	"constant_pattern",
	"constant_primary",
	"constant_range",
	"constant_select1",
	"consteval",
	"constexpr",
	"constinit",
	"constrain_module",
	"constrain_module_type",
	"constrain_type",
	"constrained_type",
	"constraint",
	"constraint_block",
	"constraint_block_item",
	"constraint_conjunction",
	"constraint_declaration",
	"constraint_disjunction",
	"constraint_expression",
	"constraint_identifier",
	"constraint_primary",
	"constraint_prototype",
	"constraint_prototype_qualifier",
	"constraint_set",
	"constraints",
	"construct_signature",
	"constructed_type",
	"constructor",
	"constructor_body",
	"constructor_constraint",
	"constructor_declaration",
	"constructor_initializer",
	"constructor_name",
	"constructor_operator",
	"constructor_path",
	"constructor_pattern",
	"constructor_synonym",
	"constructor_synonyms",
	"constructor_type",
	"content",
	"context",
	"context_bound",
	"continue",
	"continue_expression",
	"continue_statement",
	"continuous_assign",
	"contravariant_type_parameter",
	"control_escape",
	"control_letter_escape",
	"controlled_reference_event",
	"conversion_operator_declaration",
	"conversion_specification",
	"count",
	"count_quantifier",
	"covariant_type_parameter",
	"cover",
	"cover_cross",
	"cover_point",
	"cover_point_identifier",
	"cover_property_statement",
	"cover_sequence_statement",
	"coverage_event",
	"coverage_option",
	"coverage_spec_or_option",
	"covergroup",
	"covergroup_declaration",
	"covergroup_identifier",
	"covergroup_range_list",
	"covergroup_value_range",
	"coverpoint",
	"cpp",
	"crate",
	"cross",
	"cross_body",
	"cross_body_item",
	"cross_identifier",
	"curly_expression",
	"cycle_delay",
	"cycle_delay_const_range_expression",
	"cycle_delay_range",
	"d",
	"data",
	"data_constructor",
	"data_constructors",
	"data_declaration",
	"data_event",
	"data_family",
	"data_instance",
	"data_name",
	"data_signature",
	"data_source_expression",
	"data_type",
	"data_type_or_implicit1",
	"data_type_or_void",
	"dataclass",
	"datatype",
	"datatypeBranch",
	"datatypeBranches",
	"date",
	"dbscheme",
	"dbtype",
	"deassign",
	"debugger",
	"debugger_statement",
	"dec_statement",
	"decimal_digits",
	"decimal_escape",
	"decimal_floating_point_literal",
	"decimal_integer_literal",
	"decimal_number",
	"decl",
	"declaration",
	"declaration_command",
	"declaration_expression",
	"declaration_list",
	"declaration_pattern",
	"declarations",
	"declare",
	"declare_directive",
	"declare_statement",
	"decltype",
	"decorated_definition",
	"decorator",
	"def",
	"default",
	"default_case",
	"default_expression",
	"default_method_clause",
	"default_nettype_compiler_directive",
	"default_nettype_value",
	"default_parameter",
	"default_signature",
	"default_skew",
	"default_statement",
	"default_text",
	"default_type",
	"default_types",
	"defer",
	"defer_statement",
	"deferred_immediate_assert_statement",
	"deferred_immediate_assertion_item",
	"deferred_immediate_assume_statement",
	"deferred_immediate_cover_statement",
	"defined",
	"defined?",
	"defparam",
	"defparam_assignment",
	"deinit",
	"deinitializer_declaration",
	"del",
	"delay2",
	"delay3",
	"delay_control",
	"delay_or_event_control",
	"delay_value",
	"delayed_data",
	"delayed_reference",
	"delegate",
	"delegate_declaration",
	"delete",
	"delete_expression",
	"delete_method_clause",
	"delete_statement",
	"delimited_symbol",
	"dependent_name",
	"dependent_type",
	"derives",
	"derives_clause",
	"deriving",
	"deriving_instance",
	"deriving_strategy",
	"desc",
	"descendant_selector",
	"descending",
	"description",
	"destructor_declaration",
	"destructor_name",
	"destructured_left_assignment",
	"destructured_parameter",
	"diagnostic_statement",
	"dict_pattern",
	"dictionary",
	"dictionary_comprehension",
	"dictionary_splat",
	"dictionary_splat_pattern",
	"dictionary_type",
	"dimensions",
	"dimensions_expr",
	"direction",
	"directive",
	"directive_begin_keywords",
	"directive_celldefine",
	"directive_default_nettype",
	"directive_define",
	"directive_else",
	"directive_elsif",
	"directive_end_keywords",
	"directive_endcelldefine",
	"directive_endif",
	"directive_ifdef",
	"directive_ifndef",
	"directive_include",
	"directive_line",
	"directive_nounconnected_drive",
	"directive_resetall",
	"directive_timescale",
	"directive_unconnected_drive",
	"directive_undef",
	"directive_undefineall",
	"disable",
	"disable_statement",
	"discard",
	"disjunction",
	"disjunctive_normal_form_type",
	"dist",
	"dist_item",
	"dist_list",
	"dist_weight",
	"do",
	"do_block",
	"do_clause",
	"do_group",
	"do_module",
	"do_statement",
	"do_where",
	"do_while_expression",
	"doc_comment",
	"doctype",
	"document",
	"done",
	"dot",
	"dotted_key",
	"dotted_name",
	"double",
	"double_quoted_string",
	"downto",
	"dpi_function_import_property",
	"dpi_function_proto",
	"dpi_import_export",
	"dpi_spec_string",
	"dpi_task_import_property",
	"dpi_task_proto",
	"drive_strength",
	"dyn",
	"dynamic_array_new",
	"dynamic_array_variable_identifier",
	"dynamic_type",
	"dynamic_variable_name",
	"e",
	"echo",
	"echo_statement",
	"edge",
	"edge_control_specifier",
	"edge_descriptor",
	"edge_identifier",
	"edge_indicator",
	"edge_input_list",
	"edge_sensitive_path_declaration",
	"edge_symbol",
	"effect",
	"effect_pattern",
	"elaboration_system_task",
	"element",
	"element_access_expression",
	"element_binding_expression",
	"element_reference",
	"element_value_array_initializer",
	"element_value_pair",
	"elif",
	"elif_clause",
	"ellipsis",
	"else",
	"else_clause",
	"else_if_clause",
	"elseif",
	"elseif_clause",
	"elsif",
	"empty",
	"empty_list",
	"empty_statement",
	"empty_unpacked_array_concatenation",
	"enable",
	"enable_gate_instance",
	"enable_gatetype",
	"enable_terminal",
	"encapsed_string",
	"encoding",
	"end",
	"end_assertion",
	"end_block",
	"end_edge_offset",
	"end_tag",
	"endcase",
	"endchecker",
	"endclass",
	"endclocking",
	"enddeclare",
	"endfor",
	"endforeach",
	"endfunction",
	"endgenerate",
	"endgroup",
	"endif",
	"endinterface",
	"endmodule",
	"endpackage",
	"endprimitive",
	"endprogram",
	"endproperty",
	"endsequence",
	"endspecify",
	"endswitch",
	"endtable",
	"endtask",
	"endwhile",
	"enhanced_for_statement",
	"ensure",
	"entity",
	"entry",
	"enum",
	"enum_assignment",
	"enum_base_type",
	"enum_body",
	"enum_body_declarations",
	"enum_case",
	"enum_case_definitions",
	"enum_case_pattern",
	"enum_constant",
	"enum_declaration",
	"enum_declaration_list",
	"enum_definition",
	"enum_identifier",
	"enum_item",
	"enum_member_declaration",
	"enum_member_declaration_list",
	"enum_name_declaration",
	"enum_specifier",
	"enum_variant",
	"enum_variant_list",
	"enumerator",
	"enumerator_list",
	"enumerators",
	"equals",
	"equation",
	"equations",
	"erroneous_end_tag",
	"erroneous_end_tag_name",
	"error_limit_value",
	"error_suppression_expression",
	"esac",
	"escape_interpolation",
	"escape_sequence",
	"escaped_identifier",
	"eta-equality",
	"event",
	"event_based_flag",
	"event_control",
	"event_declaration",
	"event_expression",
	"event_field_declaration",
	"event_trigger",
	"eventually",
	"except",
	"except*",
	"except_clause",
	"except_group_clause",
	"exception",
	"exception_definition",
	"exception_pattern",
	"exception_variable",
	"exceptions",
	"exec",
	"exec_statement",
	"existential_type",
	"exists",
	"exit",
	"exit_statement",
	"exp",
	"expansion",
	"expect",
	"expect_property_statement",
	"explicit",
	"explicit_constructor_invocation",
	"explicit_function_specifier",
	"explicit_interface_specifier",
	"explicit_type",
	"export",
	"export_clause",
	"export_declaration",
	"export_specifier",
	"export_statement",
	"exports",
	"exports_module_directive",
	"expr",
	"expr_2021",
	"expr_aggregate_body",
	"expr_annotation",
	"expression",
	"expression_case",
	"expression_item",
	"expression_list",
	"expression_or_dist",
	"expression_reference_pattern",
	"expression_statement",
	"expression_switch_statement",
	"extended_module_path",
	"extends",
	"extends_clause",
	"extends_interfaces",
	"extends_type_clause",
	"extension",
	"extension_declaration",
	"extension_definition",
	"extension_expression",
	"extern",
	"extern_alias_directive",
	"extern_constraint_declaration",
	"extern_crate_declaration",
	"extern_modifier",
	"extern_tf_declaration",
	"external",
	"extglob_pattern",
	"fallthrough",
	"fallthrough_statement",
	"false",
	"family",
	"feature_name",
	"feature_query",
	"fi",
	"field",
	"field_access",
	"field_assignment",
	"field_declaration",
	"field_declaration_list",
	"field_definition",
	"field_designator",
	"field_expression",
	"field_get_expression",
	"field_identifier",
	"field_initializer",
	"field_initializer_list",
	"field_name",
	"field_path",
	"field_pattern",
	"field_update",
	"fields",
	"file",
	"file_descriptor",
	"file_redirect",
	"file_scoped_namespace_declaration",
	"fileprivate",
	"fileprivate(set)",
	"final",
	"final_construct",
	"final_modifier",
	"finally",
	"finally_clause",
	"find_pattern",
	"finish_number",
	"first_match",
	"fixed",
	"fixed_point_number",
	"fixed_statement",
	"fixity",
	"flags",
	"float",
	"float_literal",
	"float_value",
	"floating_attribute",
	"floating_point_literal",
	"floating_point_type",
	"flow_maybe_type",
	"fn",
	"fold_expression",
	"for",
	"for_binding",
	"for_clause",
	"for_expression",
	"for_in_clause",
	"for_in_statement",
	"for_initialization",
	"for_lifetimes",
	"for_range_loop",
	"for_statement",
	"for_step",
	"for_variable_declaration",
	"forall",
	"forall_required",
	"force",
	"foreach",
	"foreach_statement",
	"foreign",
	"foreign_export",
	"foreign_import",
	"foreign_mod_item",
	"forever",
	"forex",
	"fork",
	"forkjoin",
	"formal_argument",
	"formal_parameter",
	"formal_parameters",
	"formal_port_identifier",
	"format_expression",
	"format_specifier",
	"forward_argument",
	"forward_parameter",
	"fragment_specifier",
	"friend",
	"friend_declaration",
	"from",
	"from_clause",
	"fs",
	"full_aggregate_body",
	"full_edge_sensitive_path_description",
	"full_enum_case",
	"full_path_description",
	"fun",
	"fun_expression",
	"func",
	"func_literal",
	"function",
	"function_body_declaration",
	"function_call_expression",
	"function_data_type_or_implicit1",
	"function_declaration",
	"function_declarator",
	"function_definition",
	"function_expression",
	"function_head_parens",
	"function_identifier",
	"function_item",
	"function_modifiers",
	"function_name",
	"function_pointer_parameter",
	"function_pointer_type",
	"function_prototype",
	"function_signature",
	"function_signature_item",
	"function_statement",
	"function_statement_or_null",
	"function_static_declaration",
	"function_subroutine_call",
	"function_type",
	"functor",
	"functor_type",
	"fundep",
	"fundeps",
	"future_import_statement",
	"gadt_constructor",
	"gadt_constructors",
	"gate_instantiation",
	"gen",
	"gen_block",
	"generalize",
	"generate",
	"generate_block",
	"generate_block_identifier",
	"generate_region",
	"generator",
	"generator_expression",
	"generator_function",
	"generator_function_declaration",
	"generic_clause",
	"generic_expression",
	"generic_function",
	"generic_name",
	"generic_pattern",
	"generic_type",
	"generic_type_with_turbofish",
	"genvar",
	"genvar_declaration",
	"genvar_identifier",
	"genvar_initialization",
	"genvar_iteration",
	"get",
	"given",
	"given_conditional",
	"given_definition",
	"given_pattern",
	"global",
	"global_attribute",
	"global_declaration",
	"global_module_fragment_declaration",
	"global_statement",
	"global_variable",
	"gnu_asm_clobber_list",
	"gnu_asm_expression",
	"gnu_asm_goto_list",
	"gnu_asm_input_operand",
	"gnu_asm_input_operand_list",
	"gnu_asm_output_operand",
	"gnu_asm_output_operand_list",
	"gnu_asm_qualifier",
	"go",
	"go_statement",
	"goto",
	"goto_repetition",
	"goto_statement",
	"graphql_directive",
	"grid_value",
	"group",
	"group_clause",
	"group_name",
	"guard",
	"guard_statement",
	"guards",
	"haddock",
	"hash",
	"hash_bang_line",
	"hash_expression",
	"hash_key_symbol",
	"hash_operator",
	"hash_pattern",
	"hash_splat_argument",
	"hash_splat_nil",
	"hash_splat_parameter",
	"hash_type",
	"haskell",
	"header",
	"heredoc",
	"heredoc_beginning",
	"heredoc_body",
	"heredoc_content",
	"heredoc_end",
	"heredoc_redirect",
	"heredoc_start",
	"herestring_redirect",
	"hex_floating_point_literal",
	"hex_integer_literal",
	"hex_number",
	"hidden",
	"hiding",
	"hierarchical_btf_identifier",
	"hierarchical_instance",
	"higherOrderTerm",
	"higher_ranked_trait_bound",
	"highz0",
	"highz1",
	"hole_name",
	"hole_names",
	"html_character_reference",
	"html_comment",
	"i",
	"i386",
	"iOS",
	"iOSApplicationExtension",
	"id",
	"id_directive",
	"id_name",
	"id_selector",
	"ident",
	"identifier",
	"identifier_list",
	"identifiers",
	"identity_escape",
	"if",
	"if_clause",
	"if_expression",
	"if_generate_construct",
	"if_guard",
	"if_modifier",
	"if_statement",
	"if_term",
	"iff",
	"ifnone",
	"ignore_bins",
	"illegal_bins",
	"imaginary_literal",
	"impl",
	"impl_item",
	"implements",
	"implements_clause",
	"implication",
	"implicit",
	"implicit_array_creation_expression",
	"implicit_class_handle",
	"implicit_data_type1",
	"implicit_length_array_type",
	"implicit_object_creation_expression",
	"implicit_parameter",
	"implicit_stackalloc_expression",
	"implicit_type",
	"implicit_variable",
	"implies",
	"import",
	"importDirective",
	"importModuleExpr",
	"import_alias",
	"import_attribute",
	"import_clause",
	"import_declaration",
	"import_directive",
	"import_export",
	"import_from_statement",
	"import_list",
	"import_name",
	"import_package",
	"import_path",
	"import_prefix",
	"import_require_clause",
	"import_spec",
	"import_spec_list",
	"import_specifier",
	"import_statement",
	"important",
	"imports",
	"in",
	"in_clause",
	"in_expr",
	"inc_or_dec_expression",
	"inc_or_dec_operator",
	"inc_statement",
	"include",
	"include_compiler_directive",
	"include_compiler_directive_standard",
	"include_expression",
	"include_module",
	"include_module_type",
	"include_once",
	"include_once_expression",
	"indented_block",
	"indented_cases",
	"index_expression",
	"index_signature",
	"index_type_query",
	"index_variable_identifier",
	"indexed_range",
	"indexer_declaration",
	"indexing_operator",
	"indexing_operator_path",
	"indirect",
	"inductive",
	"infer",
	"infer_type",
	"inferred",
	"inferred_parameters",
	"infix",
	"infix_expression",
	"infix_id",
	"infix_modifier",
	"infix_pattern",
	"infix_type",
	"infixl",
	"infixr",
	"inherit",
	"inheritance_definition",
	"inheritance_specification",
	"init",
	"init_declarator",
	"init_statement",
	"init_val",
	"initial",
	"initial_construct",
	"initializer",
	"initializer_declaration",
	"initializer_expression",
	"initializer_list",
	"initializer_pair",
	"inline",
	"inline_flags_group",
	"inline_modifier",
	"inline_table",
	"inline_tag",
	"inner_attribute_item",
	"inner_doc_comment_marker",
	"inout",
	"inout_declaration",
	"inout_port_identifier",
	"inout_terminal",
	"input",
	"input_declaration",
	"input_identifier",
	"input_port_identifier",
	"input_terminal",
	"inside",
	"inside_expression",
	"instance",
	"instance_decl",
	"instance_declarations",
	"instance_expression",
	"instance_identifier",
	"instance_of",
	"instance_variable",
	"instance_variable_definition",
	"instance_variable_expression",
	"instance_variable_name",
	"instance_variable_specification",
	"instanceof",
	"instanceof_expression",
	"instantiated_class",
	"instantiated_class_type",
	"instantiation_expression",
	"insteadof",
	"int",
	"int_literal",
	"integer",
	"integer_atom_type",
	"integer_literal",
	"integer_value",
	"integer_vector_type",
	"integral_number",
	"integral_type",
	"interconnect",
	"interface",
	"interface_ansi_header",
	"interface_body",
	"interface_class_declaration",
	"interface_class_item",
	"interface_class_method",
	"interface_class_type",
	"interface_declaration",
	"interface_identifier",
	"interface_instance_identifier",
	"interface_instantiation",
	"interface_item",
	"interface_nonansi_header",
	"interface_or_generate_item",
	"interface_port_declaration",
	"interface_port_header",
	"interface_type",
	"internal",
	"internal(set)",
	"internal_module",
	"interpolated_string",
	"interpolated_string_expression",
	"interpolation",
	"interpolation_alignment_clause",
	"interpolation_brace",
	"interpolation_expression",
	"interpolation_format_clause",
	"interpolation_quote",
	"interpolation_start",
	"interpreted_string_literal",
	"interpreted_string_literal_content",
	"intersect",
	"intersection_type",
	"into",
	"invisible",
	"invocation_expression",
	"iota",
	"irrefutable",
	"is",
	"is not",
	"is_expression",
	"is_pattern",
	"is_pattern_expression",
	"item",
	"item_attribute",
	"item_extension",
	"iterable",
	"join",
	"join_any",
	"join_clause",
	"join_into_clause",
	"join_keyword",
	"join_none",
	"js_comment",
	"jsx_attribute",
	"jsx_closing_element",
	"jsx_element",
	"jsx_expression",
	"jsx_namespace_name",
	"jsx_opening_element",
	"jsx_self_closing_element",
	"jsx_text",
	"jump_statement",
	"juxtaposition_expression",
	"k",
	"keyed_element",
	"keyframe_block",
	"keyframe_block_list",
	"keyframes_name",
	"keyframes_statement",
	"keyof",
	"keyword_argument",
	"keyword_parameter",
	"keyword_pattern",
	"keyword_query",
	"keyword_separator",
	"kind_application",
	"kind_signature",
	"label",
	"label_name",
	"labeled_argument",
	"labeled_argument_type",
	"labeled_statement",
	"lambda",
	"lambda_capture_initializer",
	"lambda_capture_specifier",
	"lambda_case",
	"lambda_cases",
	"lambda_clause",
	"lambda_clause_absurd",
	"lambda_declarator",
	"lambda_default_capture",
	"lambda_expression",
	"lambda_parameters",
	"lambda_specifier",
	"large",
	"lazy",
	"lazy_expression",
	"lazy_field",
	"lazy_parameter_type",
	"lazy_pattern",
	"left",
	"left_assignment_list",
	"left_section",
	"let",
	"let_actual_arg",
	"let_and_operator",
	"let_binding",
	"let_chain",
	"let_class_expression",
	"let_clause",
	"let_condition",
	"let_declaration",
	"let_exception_expression",
	"let_expression",
	"let_formal_type1",
	"let_in",
	"let_list_of_arguments",
	"let_module_expression",
	"let_open_class_expression",
	"let_open_class_type",
	"let_open_expression",
	"let_operator",
	"let_port_item",
	"let_port_list",
	"let_statement",
	"level_input_list",
	"level_symbol",
	"lexical_declaration",
	"lhs",
	"lifetime",
	"lifetime_parameter",
	"limit_value",
	"line",
	"line_comment",
	"line_compiler_directive",
	"line_continuation",
	"line_control_statement",
	"line_number_directive",
	"linear_function",
	"linkage_specification",
	"list",
	"list_binding_pattern",
	"list_comprehension",
	"list_expression",
	"list_literal",
	"list_of_actual_arguments",
	"list_of_arguments",
	"list_of_arguments_parent",
	"list_of_clocking_decl_assign",
	"list_of_cross_items",
	"list_of_defparam_assignments",
	"list_of_formal_arguments",
	"list_of_genvar_identifiers",
	"list_of_interface_identifiers",
	"list_of_net_assignments",
	"list_of_net_decl_assignments",
	"list_of_param_assignments",
	"list_of_parameter_assignments",
	"list_of_path_delay_expressions",
	"list_of_path_inputs",
	"list_of_path_outputs",
	"list_of_port_connections",
	"list_of_port_declarations",
	"list_of_port_identifiers",
	"list_of_ports",
	"list_of_specparam_assignments",
	"list_of_tf_variable_identifiers",
	"list_of_type_assignments",
	"list_of_udp_port_identifiers",
	"list_of_variable_assignments",
	"list_of_variable_decl_assignments",
	"list_of_variable_identifiers",
	"list_of_variable_port_identifiers",
	"list_pattern",
	"list_splat",
	"list_splat_pattern",
	"literal",
	"literalId",
	"literal_element",
	"literal_suffix",
	"literal_type",
	"literal_value",
	"local",
	"local_binds",
	"local_date",
	"local_date_time",
	"local_declaration_statement",
	"local_function_statement",
	"local_open_expression",
	"local_open_pattern",
	"local_open_type",
	"local_parameter_declaration",
	"local_statement",
	"local_time",
	"local_variable_declaration",
	"localparam",
	"lock",
	"lock_statement",
	"logic",
	"long",
	"longint",
	"lookaround_assertion",
	"lookup_type",
	"loop",
	"loop_expression",
	"loop_generate_construct",
	"loop_statement",
	"loop_variables1",
	"lower_bound",
	"lvalue_expression",
	"macCatalyst",
	"macOS",
	"macOSApplicationExtension",
	"macro",
	"macro_argument_list",
	"macro_body",
	"macro_definition",
	"macro_identifier",
	"macro_invocation",
	"macro_rule",
	"macro_rules!",
	"macro_text",
	"macro_type_specifier",
	"macrocall_expression",
	"macromodule",
	"makeref_expression",
	"managed",
	"map",
	"map_type",
	"mapped_type_clause",
	"marker_annotation",
	"match",
	"match_arm",
	"match_block",
	"match_case",
	"match_condition_list",
	"match_conditional_expression",
	"match_default_expression",
	"match_expression",
	"match_operator",
	"match_pattern",
	"match_statement",
	"match_type",
	"matches",
	"matrix_expression",
	"matrix_row",
	"max",
	"mdo",
	"media_statement",
	"medium",
	"memberPredicate",
	"member_access_expression",
	"member_binding_expression",
	"member_call_expression",
	"member_expression",
	"member_identifier",
	"member_type",
	"meta",
	"meta_property",
	"metavariable",
	"method",
	"method_call",
	"method_call_body",
	"method_declaration",
	"method_definition",
	"method_elem",
	"method_identifier",
	"method_invocation",
	"method_name",
	"method_parameters",
	"method_qualifier",
	"method_reference",
	"method_signature",
	"method_specification",
	"method_type",
	"min",
	"mintypmax_expression",
	"mixed",
	"mod",
	"mod_item",
	"modifier",
	"modifiers",
	"modport",
	"modport_clocking_declaration",
	"modport_declaration",
	"modport_identifier",
	"modport_item",
	"modport_ports_declaration",
	"modport_simple_port",
	"modport_simple_ports_declaration",
	"modport_tf_ports_declaration",
	"module",
	"moduleAliasBody",
	"moduleExpr",
	"moduleInstantiation",
	"moduleMember",
	"moduleName",
	"moduleParam",
	"module_ansi_header",
	"module_application",
	"module_assignment",
	"module_binding",
	"module_body",
	"module_declaration",
	"module_definition",
	"module_directive",
	"module_export",
	"module_header",
	"module_id",
	"module_instantiation",
	"module_keyword",
	"module_macro",
	"module_name",
	"module_nonansi_header",
	"module_or_generate_item",
	"module_parameter",
	"module_partition",
	"module_path",
	"module_path_concatenation",
	"module_path_expression",
	"module_path_mintypmax_expression",
	"module_path_multiple_concatenation",
	"module_path_primary",
	"module_type_constraint",
	"module_type_definition",
	"module_type_name",
	"module_type_of",
	"module_type_path",
	"mos_switch_instance",
	"mos_switchtype",
	"move",
	"ms",
	"ms_based_modifier",
	"ms_call_modifier",
	"ms_declspec_modifier",
	"ms_pointer_modifier",
	"ms_restrict_modifier",
	"ms_signed_ptr_modifier",
	"ms_unaligned_ptr_modifier",
	"ms_unsigned_ptr_modifier",
	"mul_expr",
	"mulop",
	"mult_operator",
	"multi_way_if",
	"multiline_string_fragment",
	"multiple_concatenation",
	"mut_pattern",
	"mutable",
	"mutable_specifier",
	"mutual",
	"n_input_gate_instance",
	"n_input_gatetype",
	"n_output_gate_instance",
	"n_output_gatetype",
	"name",
	"name_and_type",
	"name_of_instance",
	"named_capturing_group",
	"named_expression",
	"named_group_backreference",
	"named_imports",
	"named_label_statement",
	"named_node",
	"named_parameter_assignment",
	"named_pattern",
	"named_port_connection",
	"named_tuple_pattern",
	"named_tuple_type",
	"named_type",
	"namespace",
	"namespace_alias_definition",
	"namespace_declaration",
	"namespace_definition",
	"namespace_export",
	"namespace_identifier",
	"namespace_import",
	"namespace_name",
	"namespace_selector",
	"namespace_selectors",
	"namespace_statement",
	"namespace_use_clause",
	"namespace_use_declaration",
	"namespace_use_group",
	"namespace_wildcard",
	"nand",
	"native",
	"ncontrol_terminal",
	"negated_child",
	"negated_command",
	"negated_pattern",
	"negated_type",
	"negation",
	"negative_literal",
	"negedge",
	"nested_identifier",
	"nested_namespace_specifier",
	"nested_type_identifier",
	"nesting_selector",
	"net_alias",
	"net_assignment",
	"net_decl_assignment",
	"net_declaration",
	"net_lvalue",
	"net_port_header1",
	"net_port_type1",
	"net_type",
	"net_type_declaration",
	"nettype",
	"never",
	"never_type",
	"new",
	"new_declarator",
	"new_expression",
	"newtype",
	"newtype_constructor",
	"next",
	"next_state",
	"nexttime",
	"nil",
	"nmos",
	"no-eta-equality",
	"node_name",
	"noexcept",
	"nominal",
	"non-sealed",
	"non_boundary_assertion",
	"non_capturing_group",
	"non_consecutive_repetition",
	"non_integer_type",
	"non_lvalue_expression",
	"non_null_expression",
	"non_port_program_item",
	"nonblocking_assignment",
	"none",
	"nonlocal",
	"nonlocal_statement",
	"nonrange_select1",
	"nonrange_variable_lvalue",
	"nonrec",
	"nor",
	"noreturn",
	"noshowcancelled",
	"not",
	"not in",
	"not_eq",
	"not_operator",
	"notif0",
	"notif1",
	"notifier",
	"notnull",
	"nowdoc",
	"nowdoc_body",
	"nowdoc_string",
	"ns",
	"null",
	"null_literal",
	"nullable_type",
	"nullptr",
	"nullsafe_member_access_expression",
	"nullsafe_member_call_expression",
	"number",
	"number_literal",
	"object",
	"object_assignment_pattern",
	"object_copy_expression",
	"object_creation_expression",
	"object_definition",
	"object_expression",
	"object_pattern",
	"object_type",
	"ocamlyacc_value",
	"octal_integer_literal",
	"octal_number",
	"of",
	"offset_date_time",
	"offsetof",
	"offsetof_expression",
	"omitting_type_annotation",
	"on",
	"one_or_more",
	"only",
	"opaque",
	"opaque_modifier",
	"open",
	"open_modifier",
	"open_module",
	"open_range_list",
	"open_tuple",
	"open_value_range",
	"opens",
	"opens_module_directive",
	"operation",
	"operator",
	"operator_assignment",
	"operator_cast",
	"operator_declaration",
	"operator_identifier",
	"operator_name",
	"opting_type_annotation",
	"option",
	"optional",
	"optional_binding",
	"optional_binding_condition",
	"optional_chain",
	"optional_identifier",
	"optional_parameter",
	"optional_parameter_declaration",
	"optional_pattern",
	"optional_type",
	"optional_type_parameter_declaration",
	"or",
	"or_eq",
	"or_operator",
	"or_pattern",
	"order",
	"orderBy",
	"orderBys",
	"order_by_clause",
	"orderby",
	"ordered_field_declaration_list",
	"ordered_parameter_assignment",
	"ordered_port_connection",
	"os",
	"out",
	"outer",
	"outer_doc_comment_marker",
	"output",
	"output_declaration",
	"output_directive",
	"output_identifier",
	"output_port_identifier",
	"output_symbol",
	"output_terminal",
	"overlap",
	"overload_declaration",
	"overload_operator",
	"overload_proto_formals",
	"override",
	"override_modifier",
	"p",
	"package",
	"package_clause",
	"package_declaration",
	"package_export_declaration",
	"package_expression",
	"package_identifier",
	"package_import_declaration",
	"package_import_item",
	"package_object",
	"package_or_generate_item_declaration",
	"package_pattern",
	"package_scope",
	"package_type",
	"packed",
	"packed_dimension",
	"packed_module",
	"pair",
	"pair_pattern",
	"par_block",
	"par_expr",
	"parallel_edge_sensitive_path_description",
	"parallel_path_description",
	"param",
	"param_assignment",
	"param_expression",
	"parameter",
	"parameter_declaration",
	"parameter_identifier",
	"parameter_list",
	"parameter_override",
	"parameter_pack_expansion",
	"parameter_port_declaration",
	"parameter_port_list",
	"parameter_types",
	"parameter_value_assignment",
	"parameters",
	"parametrized_type_expression",
	"params",
	"parens",
	"parent",
	"parenthesized_class_expression",
	"parenthesized_declarator",
	"parenthesized_expression",
	"parenthesized_list_splat",
	"parenthesized_module_expression",
	"parenthesized_module_type",
	"parenthesized_operator",
	"parenthesized_pattern",
	"parenthesized_query",
	"parenthesized_statements",
	"parenthesized_type",
	"parenthesized_value",
	"parenthesized_variable_designation",
	"partial",
	"pass",
	"pass_en_switchtype",
	"pass_enable_switch_instance",
	"pass_statement",
	"pass_switch_instance",
	"pass_switchtype",
	"pat",
	"pat_param",
	"path",
	"path_declaration",
	"path_delay_expression",
	"path_delay_value",
	"path_expression",
	"pattern",
	"pattern_character",
	"pattern_guard",
	"pattern_list",
	"pattern_synonym",
	"patterns",
	"pcontrol_terminal",
	"permits",
	"phantom",
	"php_tag",
	"pipeline",
	"placeholder_type_specifier",
	"plain_value",
	"pmos",
	"pointer_declarator",
	"pointer_expression",
	"pointer_type",
	"pointer_type_declarator",
	"polarity_operator",
	"polymorphic_type",
	"polymorphic_variant_pattern",
	"polymorphic_variant_type",
	"port",
	"port_declaration",
	"port_direction",
	"port_identifier",
	"port_reference",
	"posedge",
	"positional_pattern_clause",
	"positional_separator",
	"posix_character_class",
	"posix_class_name",
	"postcss_statement",
	"postfix",
	"postfix_expression",
	"postfix_unary_expression",
	"postulate",
	"pow_operator",
	"pragma",
	"precedence",
	"precedence_clause",
	"predefined_type",
	"predicate",
	"predicateAliasBody",
	"predicateExpr",
	"predicateName",
	"predicate_name",
	"prefix",
	"prefix_cast",
	"prefix_expression",
	"prefix_id",
	"prefix_list",
	"prefix_operator",
	"prefix_tuple",
	"prefix_unary_expression",
	"prefix_unboxed_sum",
	"prefix_unboxed_tuple",
	"prefixed_command_literal",
	"prefixed_string_literal",
	"preproc_arg",
	"preproc_call",
	"preproc_def",
	"preproc_define",
	"preproc_defined",
	"preproc_directive",
	"preproc_elif",
	"preproc_elifdef",
	"preproc_else",
	"preproc_endregion",
	"preproc_error",
	"preproc_function_def",
	"preproc_if",
	"preproc_if_in_attribute_list",
	"preproc_ifdef",
	"preproc_include",
	"preproc_line",
	"preproc_nullable",
	"preproc_params",
	"preproc_pragma",
	"preproc_region",
	"preproc_undef",
	"preproc_warning",
	"pretty_printing_indication",
	"primary",
	"primary_constructor_base_type",
	"primary_expression",
	"primary_literal",
	"primary_type",
	"primitive",
	"primitiveType",
	"primitive_definition",
	"primitive_type",
	"print",
	"print_intrinsic",
	"print_statement",
	"priority",
	"private",
	"private(set)",
	"private_module_fragment_declaration",
	"private_property_identifier",
	"procedural_continuous_assignment",
	"procedural_timing_control_statement",
	"process_substitution",
	"program",
	"program_ansi_header",
	"program_declaration",
	"program_identifier",
	"program_instantiation",
	"program_item",
	"program_nonansi_header",
	"projected_type",
	"projection",
	"projection_selector",
	"promoted",
	"property",
	"property_case_item",
	"property_declaration",
	"property_element",
	"property_expr",
	"property_formal_type1",
	"property_hook",
	"property_hook_list",
	"property_identifier",
	"property_lvar_port_direction",
	"property_name",
	"property_pattern_clause",
	"property_port_item",
	"property_port_list",
	"property_promotion_parameter",
	"property_signature",
	"property_spec",
	"protected",
	"protocol",
	"protocol_declaration",
	"protocol_initializer_declaration",
	"protocol_method_declaration",
	"protocol_subscript_declaration",
	"protocol_typealias_declaration",
	"protocol_variable_declaration",
	"provides",
	"provides_module_directive",
	"ps",
	"ps_identifier",
	"ps_or_hierarchical_array_identifier",
	"pseudo_class_selector",
	"pseudo_element_selector",
	"pub",
	"public",
	"public_field_definition",
	"public_statement",
	"pull0",
	"pull1",
	"pull_gate_instance",
	"pulldown",
	"pulldown_strength",
	"pullup",
	"pullup_strength",
	"pulse_control_specparam",
	"pulsestyle_declaration",
	"pulsestyle_ondetect",
	"pulsestyle_onevent",
	"pure",
	"pure_virtual_clause",
	"qid",
	"ql",
	"qldoc",
	"qualified",
	"qualifiedRhs",
	"qualified_expr",
	"qualified_expression",
	"qualified_identifier",
	"qualified_name",
	"qualified_type",
	"qualifier",
	"qualifiers",
	"quantified",
	"quantified_type",
	"quantified_variables",
	"quantifier",
	"quasiquote",
	"quasiquote_body",
	"query",
	"query_expression",
	"queue_dimension",
	"quote",
	"quoteContext",
	"quoteGoal",
	"quoteTerm",
	"quote_expression",
	"quote_statement",
	"quoted_attribute_value",
	"quoted_decls",
	"quoted_expression",
	"quoted_extension",
	"quoted_item_extension",
	"quoted_key",
	"quoted_pattern",
	"quoted_string",
	"quoted_string_content",
	"quoted_type",
	"quoter",
	"r",
	"raise",
	"raise_statement",
	"rand",
	"randc",
	"randcase",
	"randcase_item",
	"randcase_statement",
	"random_qualifier",
	"randomize",
	"randomize_call",
	"range",
	"range_clause",
	"range_expression",
	"range_pattern",
	"rank",
	"rational",
	"raw",
	"raw_string",
	"raw_string_content",
	"raw_string_delimiter",
	"raw_string_end",
	"raw_string_literal",
	"raw_string_literal_content",
	"raw_string_start",
	"raw_text",
	"rcmos",
	"readonly",
	"readonly_modifier",
	"readonly_type",
	"real",
	"real_literal",
	"real_number",
	"realtime",
	"rec",
	"receive_statement",
	"receiver_parameter",
	"record",
	"record_assignments",
	"record_binding_pattern",
	"record_constructor",
	"record_constructor_instance",
	"record_declaration",
	"record_declarations_block",
	"record_eta",
	"record_expression",
	"record_induction",
	"record_name",
	"record_pattern",
	"record_pattern_body",
	"record_pattern_component",
	"record_signature",
	"recursive_pattern",
	"redirected_statement",
	"redo",
	"ref",
	"ref_declaration",
	"ref_expression",
	"ref_pattern",
	"ref_qualifier",
	"ref_type",
	"reference_assignment_expression",
	"reference_declarator",
	"reference_event",
	"reference_expression",
	"reference_modifier",
	"reference_pattern",
	"reference_type",
	"refinement",
	"reftype_expression",
	"refutation_case",
	"refvalue_expression",
	"reg",
	"regex",
	"regex_flags",
	"regex_pattern",
	"register",
	"reject_limit_value",
	"reject_on",
	"rel_operator",
	"relational_pattern",
	"relative_import",
	"relative_name",
	"relative_scope",
	"release",
	"remain_active_flag",
	"remaining_field_pattern",
	"remove",
	"removed_trait_bound",
	"renaming",
	"repeat",
	"repeat_pattern",
	"repeat_range",
	"repeat_while_statement",
	"repeated_parameter_type",
	"reprType",
	"representational",
	"require",
	"require_expression",
	"require_once",
	"require_once_expression",
	"required",
	"required_parameter",
	"requirement_seq",
	"requires",
	"requires_clause",
	"requires_expression",
	"requires_modifier",
	"requires_module_directive",
	"rescue",
	"rescue_modifier",
	"resource",
	"resource_specification",
	"rest_assignment",
	"rest_pattern",
	"rest_type",
	"restore",
	"restrict",
	"restrict_property_statement",
	"result",
	"rethrows",
	"retry",
	"return",
	"return_expression",
	"return_statement",
	"rewrite",
	"rewrite_equations",
	"rhs",
	"ri",
	"right",
	"right_assignment_list",
	"right_section",
	"rnmos",
	"role",
	"role_annotation",
	"rpmos",
	"rtran",
	"rtranif0",
	"rtranif1",
	"rule_set",
	"rune_literal",
	"s",
	"s_always",
	"s_eventually",
	"s_nexttime",
	"s_until",
	"s_until_with",
	"safety",
	"sample",
	"satisfies",
	"satisfies_expression",
	"scalar_constant",
	"scalar_timing_check_condition",
	"scalared",
	"scope_resolution",
	"scoped",
	"scoped_call_expression",
	"scoped_identifier",
	"scoped_property_access_expression",
	"scoped_type",
	"scoped_type_identifier",
	"scoped_use_list",
	"script_element",
	"sealed",
	"seh_except_clause",
	"seh_finally_clause",
	"seh_leave_statement",
	"seh_try_statement",
	"select",
	"select1",
	"select_clause",
	"select_condition",
	"select_expression",
	"select_statement",
	"selected_import",
	"selector",
	"selector_expression",
	"selector_query",
	"selectors",
	"self",
	"self_closing_tag",
	"self_parameter",
	"self_type",
	"semantic_version",
	"send_statement",
	"seq_block",
	"sequence",
	"sequence_abbrev",
	"sequence_declaration",
	"sequence_expr",
	"sequence_expression",
	"sequence_formal_type1",
	"sequence_instance",
	"sequence_list_of_arguments",
	"sequence_lvar_port_direction",
	"sequence_method_call",
	"sequence_port_item",
	"sequence_port_list",
	"sequential_body",
	"sequential_entry",
	"set",
	"set_comprehension",
	"set_expression",
	"set_literal",
	"setter",
	"shebang",
	"shebang_directive",
	"shell_command_expression",
	"short",
	"short_var_declaration",
	"shorthand_field_identifier",
	"shorthand_field_initializer",
	"shorthand_property_identifier",
	"shorthand_property_identifier_pattern",
	"shortint",
	"shortreal",
	"showcancelled",
	"showcancelled_declaration",
	"sibling_selector",
	"sig",
	"sign_expression",
	"sign_operator",
	"signature",
	"signatureExpr",
	"signed",
	"signed_number",
	"simpleId",
	"simple_enum_case",
	"simple_expansion",
	"simple_identifier",
	"simple_immediate_assert_statement",
	"simple_immediate_assume_statement",
	"simple_immediate_cover_statement",
	"simple_parameter",
	"simple_path_declaration",
	"simple_requirement",
	"simple_symbol",
	"simple_text_macro_usage",
	"simulator",
	"singleton_class",
	"singleton_method",
	"singleton_type",
	"sized_type_specifier",
	"sizeof",
	"sizeof_expression",
	"slice",
	"slice_expression",
	"slice_pattern",
	"slice_size",
	"slice_type",
	"small",
	"soft",
	"solve",
	"solve_before_list",
	"source_file",
	"special",
	"specialId",
	"special_call",
	"special_variable_name",
	"specify",
	"specify_block",
	"specify_input_terminal_descriptor",
	"specify_output_terminal_descriptor",
	"specparam",
	"specparam_assignment",
	"specparam_declaration",
	"specparam_identifier",
	"splat_argument",
	"splat_expression",
	"splat_parameter",
	"splat_pattern",
	"splat_type",
	"splice",
	"splice_expression",
	"spread_element",
	"spread_parameter",
	"stable_identifier",
	"stable_type_identifier",
	"stackalloc",
	"stackalloc_expression",
	"standard_type",
	"star",
	"start_assertion",
	"start_edge_offset",
	"start_tag",
	"state_dependent_path_declaration",
	"statement",
	"statement_block",
	"statement_identifier",
	"statement_item",
	"statement_or_null",
	"static",
	"static get",
	"static_assert",
	"static_assert_declaration",
	"static_initializer",
	"static_item",
	"static_modifier",
	"static_string_literal",
	"static_variable_declaration",
	"std",
	"stmt",
	"stock",
	"storage_class_specifier",
	"stream_concatenation",
	"stream_expression",
	"stream_operator",
	"streaming_concatenation",
	"strength0",
	"strength1",
	"strict",
	"strict_field",
	"strict_types",
	"strictconcat",
	"strictcount",
	"strictfp",
	"strictsum",
	"string",
	"string_array",
	"string_content",
	"string_end",
	"string_fragment",
	"string_get_expression",
	"string_interpolation",
	"string_literal",
	"string_literal_content",
	"string_literal_encoding",
	"string_start",
	"string_value",
	"strong",
	"strong0",
	"strong1",
	"struct",
	"struct_declaration",
	"struct_definition",
	"struct_expression",
	"struct_item",
	"struct_pattern",
	"struct_specifier",
	"struct_type",
	"struct_union",
	"struct_union_member",
	"structural_type",
	"structure",
	"structured_binding_declarator",
	"style_element",
	"stylesheet",
	"subpattern",
	"subroutine_call",
	"subscript",
	"subscript_argument_list",
	"subscript_declaration",
	"subscript_designator",
	"subscript_expression",
	"subscript_range_designator",
	"subshell",
	"sum",
	"super",
	"super_interfaces",
	"super_ref",
	"superclass",
	"supply0",
	"supply1",
	"supports_statement",
	"swift",
	"switch",
	"switch_block",
	"switch_block_statement_group",
	"switch_body",
	"switch_case",
	"switch_default",
	"switch_expression",
	"switch_expression_arm",
	"switch_label",
	"switch_rule",
	"switch_section",
	"switch_statement",
	"symbol",
	"symbol_array",
	"sync_accept_on",
	"sync_reject_on",
	"synchronized",
	"synchronized_statement",
	"syntax",
	"system_lib_string",
	"system_tf_call",
	"system_tf_identifier",
	"t",
	"table",
	"tableName",
	"table_array_element",
	"tactic",
	"tag",
	"tag_name",
	"tag_pattern",
	"tag_specification",
	"tagged",
	"tagged_union_expression",
	"target",
	"targetEnvironment",
	"task",
	"task_body_declaration",
	"task_declaration",
	"task_identifier",
	"task_prototype",
	"template",
	"template_argument_list",
	"template_body",
	"template_declaration",
	"template_expression",
	"template_function",
	"template_instantiation",
	"template_literal_type",
	"template_method",
	"template_parameter_list",
	"template_string",
	"template_substitution",
	"template_template_parameter_declaration",
	"template_type",
	"term",
	"terminal_identifier",
	"ternary_expression",
	"test_command",
	"test_operator",
	"test_pattern",
	"text",
	"text_interpolation",
	"text_macro_definition",
	"text_macro_identifier",
	"text_macro_name",
	"text_macro_usage",
	"tf_call",
	"tf_identifier",
	"tf_item_declaration",
	"tf_port_declaration",
	"tf_port_direction",
	"tf_port_item1",
	"tf_port_list",
	"th_quoted_name",
	"then",
	"then_clause",
	"this",
	"this_type",
	"thread_local",
	"threshold",
	"throughout",
	"throw",
	"throw_expression",
	"throw_specifier",
	"throw_statement",
	"throws",
	"ticks",
	"time",
	"time_literal",
	"time_unit",
	"timecheck_condition",
	"timeprecision",
	"timescale_compiler_directive",
	"timestamp_condition",
	"timeunit",
	"timeunits_declaration",
	"timing_check_condition",
	"timing_check_event",
	"timing_check_event_control",
	"timing_check_limit",
	"to",
	"token_binding_pattern",
	"token_repetition",
	"token_repetition_pattern",
	"token_tree",
	"token_tree_pattern",
	"top_splice",
	"toplevel_directive",
	"trailing_return_type",
	"trait",
	"trait_bounds",
	"trait_declaration",
	"trait_definition",
	"trait_item",
	"tran",
	"tranif0",
	"tranif1",
	"trans_item",
	"trans_list",
	"trans_range_list",
	"trans_set",
	"transform",
	"transient",
	"transitive",
	"translated_string",
	"translation_unit",
	"transparent",
	"transparent_modifier",
	"tri",
	"tri0",
	"tri1",
	"triand",
	"trior",
	"trireg",
	"true",
	"try",
	"try_block",
	"try_expression",
	"try_statement",
	"try_with_resources_statement",
	"tt",
	"tuple",
	"tuple_element",
	"tuple_expression",
	"tuple_pattern",
	"tuple_struct_pattern",
	"tuple_type",
	"tvOS",
	"ty",
	"type",
	"typeAliasBody",
	"typeExpr",
	"typeUnionBody",
	"type_alias",
	"type_alias_declaration",
	"type_alias_statement",
	"type_annotation",
	"type_application",
	"type_argument_list",
	"type_arguments",
	"type_assertion",
	"type_assertion_expression",
	"type_assignment",
	"type_binder",
	"type_binding",
	"type_bound",
	"type_case",
	"type_case_clause",
	"type_cast_expression",
	"type_constraint",
	"type_constructor",
	"type_constructor_path",
	"type_conversion",
	"type_conversion_expression",
	"type_declaration",
	"type_definition",
	"type_descriptor",
	"type_elem",
	"type_family",
	"type_family_injectivity",
	"type_family_result",
	"type_head",
	"type_identifier",
	"type_instance",
	"type_instantiation_expression",
	"type_item",
	"type_lambda",
	"type_list",
	"type_option",
	"type_param",
	"type_parameter",
	"type_parameter_constraint",
	"type_parameter_constraints_clause",
	"type_parameter_declaration",
	"type_parameter_list",
	"type_parameters",
	"type_params",
	"type_pattern",
	"type_patterns",
	"type_predicate",
	"type_predicate_annotation",
	"type_qualifier",
	"type_query",
	"type_reference",
	"type_requirement",
	"type_role",
	"type_signature",
	"type_spec",
	"type_specifier",
	"type_switch_statement",
	"type_synomym",
	"type_variable",
	"typealias",
	"typealias_declaration",
	"typed_binding",
	"typed_class_expression",
	"typed_default_parameter",
	"typed_expression",
	"typed_module_expression",
	"typed_parameter",
	"typed_pattern",
	"typed_quote",
	"typedef",
	"typename",
	"typeof",
	"typeof_expression",
	"typeset",
	"typevar",
	"u",
	'u"',
	"u'",
	'u8"',
	"u8'",
	'u8R"',
	'uR"',
	"udp_ansi_declaration",
	"udp_declaration",
	"udp_declaration_port_list",
	"udp_initial_statement",
	"udp_input_declaration",
	"udp_instance",
	"udp_instantiation",
	"udp_nonansi_declaration",
	"udp_output_declaration",
	"udp_port_declaration",
	"udp_port_list",
	"udp_reg_declaration",
	"unary",
	"unary_expr",
	"unary_expression",
	"unary_op_expression",
	"unary_operator",
	"unary_query",
	"unary_typed_expression",
	"unbased_unsized_literal",
	"unboxed_sum",
	"unboxed_tuple",
	"unboxed_unit",
	"unchecked",
	"unconnected_drive",
	"undef",
	"undefined",
	"underscore",
	"underscore_pattern",
	"unicode_character_escape",
	"unicode_property_name",
	"unicode_property_value",
	"unicode_property_value_expression",
	"uninterpreted",
	"union",
	"unionDecl",
	"union_item",
	"union_pattern",
	"union_specifier",
	"union_type",
	"unique",
	"unique symbol",
	"unique0",
	"unique_priority",
	"uniqueness_constraint",
	"unit",
	"unit_expression",
	"unit_type",
	"universal_selector",
	"unknown",
	"unless",
	"unless_guard",
	"unless_modifier",
	"unmanaged",
	"unop",
	"unpacked_dimension",
	"unqual_agg_body",
	"unquote",
	"unquoteDecl",
	"unquoteDef",
	"unquote_decl",
	"unsafe",
	"unsafe_block",
	"unsafe_statement",
	"unset",
	"unset_command",
	"unset_statement",
	"unsetenv",
	"unsigned",
	"unsigned_number",
	"unsized_dimension",
	"until",
	"until_modifier",
	"until_with",
	"untyped",
	"untyped_binding",
	"update_expression",
	"upper_bound",
	"us",
	"use",
	"use_as_clause",
	"use_bounds",
	"use_declaration",
	"use_instead_of_clause",
	"use_list",
	"use_wildcard",
	"user_defined_literal",
	"uses",
	"uses_module_directive",
	"using",
	"using_declaration",
	"using_directive",
	"using_directive_key",
	"using_directive_value",
	"using_statement",
	"uwire",
	"val",
	"val_declaration",
	"val_definition",
	"value_binding_pattern",
	"value_definition",
	"value_name",
	"value_path",
	"value_pattern",
	"value_range",
	"value_specification",
	"var",
	"varDecl",
	"varName",
	"var_declaration",
	"var_definition",
	"var_modifier",
	"var_pattern",
	"var_spec",
	"var_spec_list",
	"varchar",
	"variable",
	"variable_assignment",
	"variable_assignments",
	"variable_decl_assignment",
	"variable_declaration",
	"variable_declarator",
	"variable_identifier_list",
	"variable_lvalue",
	"variable_name",
	"variable_port_header",
	"variable_reference_pattern",
	"variadic_argument",
	"variadic_declarator",
	"variadic_parameter",
	"variadic_parameter_declaration",
	"variadic_placeholder",
	"variadic_type_parameter_declaration",
	"variadic_unpacking",
	"variant_declaration",
	"vector_expression",
	"vectored",
	"verbatim_string_literal",
	"via",
	"view_bound",
	"view_pattern",
	"virtual",
	"virtual_specifier",
	"vis",
	"visibility_modifier",
	"void",
	"void_type",
	"volatile",
	"wait",
	"wait_order",
	"wait_statement",
	"wand",
	"warning",
	"warnings",
	"watchOS",
	"weak",
	"weak0",
	"weak1",
	"when",
	"when_clause",
	"where",
	"where_clause",
	"where_expression",
	"where_predicate",
	"while",
	"while_expression",
	"while_modifier",
	"while_statement",
	"wildcard",
	"wildcard_import",
	"wildcard_node",
	"wildcard_pattern",
	"wire",
	"with",
	"with_clause",
	"with_expression",
	"with_expressions",
	"with_initializer",
	"with_item",
	"with_statement",
	"with_template_body",
	"within",
	"wor",
	"word",
	"x86_64",
	"xnor",
	"xor",
	"xor_eq",
	"yield",
	"yield_expression",
	"yield_statement",
	"zero_directive",
	"zero_or_more",
	"zero_or_one",
	"{",
	"{%",
	"{%%",
	"{-#",
	"{<",
	"{{",
	"{|",
	"|",
	"|&",
	"|)",
	"|->",
	"|=",
	"|=>",
	"|]",
	"||",
	"||=",
	"||]",
	"|}",
	"}",
	"}}",
	"~",
	"~&",
	"~=",
	"~@",
	"~^",
	"~|",
	"λ",
	"–",
	"–>",
	"––",
	"…",
	"←",
	"→",
	"⇒",
	"∀",
	"∷",
	"⊸",
	"★",
	"⟦",
	"⟧",
	"⦃",
	"⦄",
	"⦇",
	"⦈",
]

SupportedExtensions = Literal[
	# All unique file extensions for supported languages (auto-generated)
	"_js",
	"agda",
	"aw",
	"bones",
	"builder",
	"bzl",
	"c",
	"c++",
	"cake",
	"cats",
	"cc",
	"cgi",
	"cp",
	"cpp",
	"cs",
	"cshtml",
	"csx",
	"ctp",
	"cxx",
	"eliom",
	"eliomi",
	"es",
	"es6",
	"fcgi",
	"frag",
	"gemspec",
	"go",
	"god",
	"gs",
	"gyp",
	"h",
	"h++",
	"hh",
	"hpp",
	"hs",
	"hsc",
	"hxx",
	"idc",
	"inc",
	"inl",
	"ipp",
	"irbrc",
	"jake",
	"java",
	"jbuilder",
	"jl",
	"js",
	"jsb",
	"jscad",
	"jsfl",
	"jsm",
	"jss",
	"lmi",
	"ml",
	"ml4",
	"mli",
	"mll",
	"mly",
	"mspec",
	"njs",
	"pac",
	"php",
	"php3",
	"php4",
	"php5",
	"phps",
	"phpt",
	"pluginspec",
	"podspec",
	"py",
	"pyde",
	"pyp",
	"pyt",
	"pyw",
	"rabl",
	"rake",
	"rb",
	"rbuild",
	"rbw",
	"rbx",
	"rpy",
	"rs",
	"rs.in",
	"ru",
	"ruby",
	"sbt",
	"sc",
	"scala",
	"sjs",
	"ssjs",
	"sublime-build",
	"sublime-commands",
	"sublime-completions",
	"sublime-keymap",
	"sublime-macro",
	"sublime-menu",
	"sublime-mousemap",
	"sublime-project",
	"sublime-settings",
	"sublime-theme",
	"sublime-workspace",
	"sublime_metrics",
	"sublime_session",
	"swift",
	"tac",
	"tcc",
	"thor",
	"tpp",
	"ts",
	"tsx",
	"v",
	"veo",
	"w",
	"watchr",
	"wsgi",
	"xpy",
	"xsjs",
	"xsjslib",
]
