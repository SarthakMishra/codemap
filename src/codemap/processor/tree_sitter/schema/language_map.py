"""Auto-generated language to node mapping. DO NOT EDIT MANUALLY."""

# ruff: noqa: E501, RUF001, F405, F821
from .entity.types import EntityType
from .languages.literals import NodeTypes, SupportedLanguages

NodeMapping = dict[NodeTypes, EntityType]

LANGUAGE_NODE_MAPPING: dict[SupportedLanguages, NodeMapping] = {
	"go": {
		"!": "LOGICAL_OPERATOR",
		"!=": "PATTERN",
		# '"': 'UNKNOWN'  # LOW CONFIDENCE (0.30) for node '"' -> FINALLY
		"%": "PATTERN",
		"%=": "PATTERN",
		"&": "BINARY_OPERATION",
		"&&": "IF",
		"&=": "PATTERN",
		"&^": "BINARY_OPERATION",
		"&^=": "PATTERN",
		"(": "PATTERN",
		")": "METHOD",
		"*": "PATTERN",
		"*=": "PATTERN",
		"+": "FLOAT",
		"++": "FOR_IN",
		"+=": "METHOD",
		",": "IF",
		"-": "FLOAT",
		"--": "REFERENCE_OPERATOR",
		"-=": "PATTERN",
		".": "METHOD",
		"...": "METHOD",
		"/": "PATTERN",
		"/=": "PATTERN",
		":": "METHOD",
		":=": "METHOD",
		";": "IF",
		"<": "PATTERN",
		"<-": "FUNCTION",
		"<<": "PATTERN",
		"<<=": "PATTERN",
		"<=": "REFERENCE_OPERATOR",
		"=": "PATTERN",
		"==": "PATTERN",
		">": "REFERENCE_OPERATOR",
		">=": "REFERENCE_OPERATOR",
		">>": "PATTERN",
		">>=": "PATTERN",
		"[": "SET",
		"]": "PATTERN",
		"^": "BINARY_OPERATION",
		"^=": "ASSIGNMENT_OPERATOR",
		"_expression": "METHOD",
		"_simple_statement": "PATTERN",
		"_simple_type": "PATTERN",
		"_statement": "IF",
		"_type": "TYPE_OPERATOR",
		"`": "LITERAL",
		"argument_list": "METHOD",
		"array_type": "PATTERN",
		"assignment_statement": "METHOD",
		"binary_expression": "CONDITIONAL",
		"blank_identifier": "PATTERN",
		"block": "BLOCK",
		"break": "IF",
		"break_statement": "METHOD",
		"call_expression": "METHOD",
		"case": "METHOD",
		"chan": "METHOD",
		"channel_type": "METHOD",
		"comment": "COMMENT",
		"communication_case": "METHOD",
		"composite_literal": "PATTERN",
		"const": "PATTERN",
		"const_declaration": "METHOD",
		"const_spec": "PATTERN",
		"continue": "METHOD",
		"continue_statement": "METHOD",
		"dec_statement": "METHOD",
		"default": "METHOD",
		"default_case": "METHOD",
		"defer": "IF",
		"defer_statement": "IF",
		"dot": "METHOD",
		"else": "IF",
		"empty_statement": "EMPTY",
		"escape_sequence": "PATTERN",
		"expression_case": "METHOD",
		"expression_list": "METHOD",
		"expression_statement": "METHOD",
		"expression_switch_statement": "METHOD",
		"fallthrough": "IF",
		"fallthrough_statement": "IF",
		"false": "BOOLEAN",
		"field_declaration": "METHOD",
		"field_declaration_list": "METHOD",
		"field_identifier": "METHOD",
		"float_literal": "FLOAT",
		"for": "METHOD",
		"for_clause": "METHOD",
		"for_statement": "IF",
		"func": "FUNCTION",
		"func_literal": "FUNCTION",
		"function_declaration": "METHOD",
		"function_type": "METHOD",
		"generic_type": "TYPE_OPERATOR",
		"go": "PACKAGE",
		"go_statement": "METHOD",
		"goto": "METHOD",
		"goto_statement": "METHOD",
		"identifier": "METHOD",
		"if": "IF",
		"if_statement": "IF",
		"imaginary_literal": "LITERAL",
		"implicit_length_array_type": "METHOD",
		"import": "IMPORT",
		"import_declaration": "IMPORT",
		"import_spec": "METHOD",
		"import_spec_list": "METHOD",
		"inc_statement": "METHOD",
		"index_expression": "METHOD",
		"int_literal": "LITERAL",
		"interface": "METHOD",
		"interface_type": "METHOD",
		"interpreted_string_literal": "PATTERN",
		"interpreted_string_literal_content": "PATTERN",
		"iota": "TUPLE",
		"keyed_element": "PATTERN",
		"label_name": "METHOD",
		"labeled_statement": "LABEL",
		"literal_element": "METHOD",
		"literal_value": "PATTERN",
		"map": "SET",
		"map_type": "METHOD",
		"method_declaration": "METHOD",
		"method_elem": "METHOD",
		"negated_type": "PATTERN",
		"nil": "NULL",
		"package": "WITH",
		"package_clause": "WITH",
		"package_identifier": "WITH",
		"parameter_declaration": "METHOD",
		"parameter_list": "METHOD",
		"parenthesized_expression": "PATTERN",
		"parenthesized_type": "PATTERN",
		"pointer_type": "METHOD",
		"qualified_type": "WITH",
		"range": "TUPLE",
		"range_clause": "METHOD",
		"raw_string_literal": "STRING",
		"raw_string_literal_content": "PATTERN",
		"receive_statement": "METHOD",
		"return": "METHOD",
		"return_statement": "RETURN",
		"rune_literal": "PATTERN",
		"select": "METHOD",
		"select_statement": "METHOD",
		"selector_expression": "METHOD",
		"send_statement": "METHOD",
		"short_var_declaration": "METHOD",
		"slice_expression": "PATTERN",
		"slice_type": "PATTERN",
		"source_file": "METHOD",
		"struct": "PATTERN",
		"struct_type": "TYPE_OPERATOR",
		"switch": "METHOD",
		"true": "BOOLEAN",
		"type": "PATTERN",
		"type_alias": "METHOD",
		"type_arguments": "FUNCTION",
		"type_assertion_expression": "TYPE_OPERATOR",
		"type_case": "PATTERN",
		"type_constraint": "METHOD",
		"type_conversion_expression": "PATTERN",
		"type_declaration": "WITH",
		"type_elem": "METHOD",
		"type_identifier": "PATTERN",
		"type_instantiation_expression": "METHOD",
		"type_parameter_declaration": "METHOD",
		"type_parameter_list": "METHOD",
		"type_spec": "PATTERN",
		"type_switch_statement": "METHOD",
		"unary_expression": "REFERENCE_OPERATOR",
		"var": "METHOD",
		"var_declaration": "METHOD",
		"var_spec": "METHOD",
		"var_spec_list": "METHOD",
		"variadic_argument": "NULL",
		"variadic_parameter_declaration": "METHOD",
		"{": "BLOCK",
		"|": "TYPE_OPERATOR",
		"|=": "TYPE_OPERATOR",
		"||": "IF",
		"}": "BLOCK",
		"~": "PATTERN",
	},
	"javascript": {
		"!": "CONDITIONAL",
		"!=": "TYPE_OPERATOR",
		"!==": "TYPE_OPERATOR",
		# '"': 'UNKNOWN'  # LOW CONFIDENCE (0.30) for node '"' -> FINALLY
		"${": "PATTERN",
		"%": "METHOD",
		"%=": "METHOD",
		"&": "BINARY_OPERATION",
		"&&": "CONDITIONAL",
		"&&=": "TYPE_OPERATOR",
		"&=": "PATTERN",
		"'": "CHAR",
		"(": "METHOD",
		")": "IF",
		"*": "FLOAT",
		"**": "PATTERN",
		"**=": "METHOD",
		"*=": "PATTERN",
		"+": "PATTERN",
		"++": "FOR_IN",
		"+=": "METHOD",
		",": "IF",
		"-": "FLOAT",
		"--": "METHOD",
		"-=": "METHOD",
		".": "METHOD",
		"...": "SET",
		"/": "PATTERN",
		"/=": "PATTERN",
		"/>": "PATTERN",
		":": "METHOD",
		";": "METHOD",
		"<": "PATTERN",
		"</": "PATTERN",
		"<<": "PATTERN",
		"<<=": "PATTERN",
		"<=": "CONDITIONAL",
		"=": "METHOD",
		"==": "PATTERN",
		"===": "PATTERN",
		"=>": "FUNCTION",
		">": "REFERENCE_OPERATOR",
		">=": "CONDITIONAL",
		">>": "WITH",
		">>=": "PATTERN",
		">>>": "WITH",
		">>>=": "PATTERN",
		"?": "IF",
		"??": "NULL",
		"??=": "NULL",
		"@": "METHOD",
		"[": "PATTERN",
		"]": "PATTERN",
		"^": "BINARY_OPERATION",
		"^=": "PATTERN",
		"`": "PATTERN",
		"arguments": "METHOD",
		"array": "SET",
		"array_pattern": "PATTERN",
		"arrow_function": "FUNCTION",
		"as": "IF",
		"assignment_expression": "METHOD",
		"assignment_pattern": "PATTERN",
		"async": "FUNCTION",
		"augmented_assignment_expression": "PATTERN",
		"await": "ASYNC",
		"await_expression": "METHOD",
		"binary_expression": "PATTERN",
		"break": "METHOD",
		"break_statement": "METHOD",
		"call_expression": "METHOD",
		"case": "METHOD",
		"catch": "TRY_BLOCK",
		"catch_clause": "TRY_BLOCK",
		"class": "METHOD",
		"class_body": "METHOD",
		"class_declaration": "METHOD",
		"class_heritage": "METHOD",
		"class_static_block": "METHOD",
		"comment": "COMMENT",
		"computed_property_name": "METHOD",
		"const": "PATTERN",
		"continue": "PATTERN",
		"continue_statement": "METHOD",
		"debugger": "METHOD",
		"debugger_statement": "METHOD",
		"declaration": "METHOD",
		"decorator": "METHOD",
		"default": "METHOD",
		"delete": "METHOD",
		"do": "METHOD",
		"do_statement": "METHOD",
		"else": "IF",
		"else_clause": "IF",
		"empty_statement": "IF",
		"escape_sequence": "PATTERN",
		"export": "EXPORT",
		"export_clause": "METHOD",
		"export_specifier": "EXPORT",
		"export_statement": "METHOD",
		"expression": "METHOD",
		"expression_statement": "IF",
		"extends": "METHOD",
		"false": "BOOLEAN",
		"field_definition": "METHOD",
		"finally": "IF",
		"finally_clause": "IF",
		"for": "PATTERN",
		"for_in_statement": "FOR_IN",
		"for_statement": "METHOD",
		"formal_parameters": "METHOD",
		"from": "WITH",
		"function": "METHOD",
		"function_declaration": "FUNCTION",
		"function_expression": "FUNCTION",
		"generator_function": "METHOD",
		"generator_function_declaration": "METHOD",
		"get": "METHOD",
		"hash_bang_line": "PATTERN",
		"html_character_reference": "PATTERN",
		"html_comment": "COMMENT",
		"identifier": "METHOD",
		"if": "IF",
		"if_statement": "ASSERT",
		"import": "METHOD",
		"import_attribute": "METHOD",
		"import_clause": "METHOD",
		"import_specifier": "METHOD",
		"import_statement": "METHOD",
		"in": "METHOD",
		"instanceof": "METHOD",
		"jsx_attribute": "METHOD",
		"jsx_closing_element": "METHOD",
		"jsx_element": "SET",
		"jsx_expression": "PATTERN",
		"jsx_namespace_name": "METHOD",
		"jsx_opening_element": "METHOD",
		"jsx_self_closing_element": "METHOD",
		"jsx_text": "PATTERN",
		"labeled_statement": "IF",
		"let": "METHOD",
		"lexical_declaration": "METHOD",
		"member_expression": "METHOD",
		"meta": "BINARY",
		"meta_property": "METHOD",
		"method_definition": "METHOD",
		"named_imports": "IMPORT",
		"namespace_export": "EXPORT",
		"namespace_import": "NAMESPACE",
		"new": "METHOD",
		"new_expression": "METHOD",
		"null": "NULL",
		"number": "PATTERN",
		"object": "METHOD",
		"object_assignment_pattern": "PATTERN",
		"object_pattern": "PATTERN",
		"of": "SET",
		"optional_chain": "METHOD",
		"pair": "PATTERN",
		"pair_pattern": "PATTERN",
		"parenthesized_expression": "METHOD",
		"pattern": "PATTERN",
		"primary_expression": "PATTERN",
		"private_property_identifier": "METHOD",
		"program": "METHOD",
		"property_identifier": "METHOD",
		"regex": "PATTERN",
		"regex_flags": "PATTERN",
		"regex_pattern": "PATTERN",
		"rest_pattern": "PATTERN",
		"return": "FUNCTION",
		"return_statement": "METHOD",
		"sequence_expression": "PATTERN",
		"set": "METHOD",
		"shorthand_property_identifier": "METHOD",
		"shorthand_property_identifier_pattern": "METHOD",
		"spread_element": "METHOD",
		"statement": "IF",
		"statement_block": "BLOCK",
		"statement_identifier": "METHOD",
		"static": "METHOD",
		"static get": "METHOD",
		"string": "PATTERN",
		"string_fragment": "METHOD",
		"subscript_expression": "METHOD",
		"super": "METHOD",
		"switch": "METHOD",
		"switch_body": "METHOD",
		"switch_case": "METHOD",
		"switch_default": "PATTERN",
		"switch_statement": "METHOD",
		"target": "METHOD",
		"template_string": "PATTERN",
		"template_substitution": "PATTERN",
		"ternary_expression": "CONDITIONAL",
		"this": "METHOD",
		"throw": "TRY_BLOCK",
		"throw_statement": "ASSERT",
		"true": "BOOLEAN",
		"try": "TRY_BLOCK",
		"try_statement": "TRY_BLOCK",
		"typeof": "TYPE_OPERATOR",
		"unary_expression": "CONDITIONAL",
		"undefined": "NULL",
		"update_expression": "METHOD",
		"var": "METHOD",
		"variable_declaration": "METHOD",
		"variable_declarator": "METHOD",
		"void": "IF",
		"while": "METHOD",
		"while_statement": "IF",
		"with": "METHOD",
		"with_statement": "METHOD",
		"yield": "YIELD",
		"yield_expression": "METHOD",
		"{": "BLOCK",
		"|": "BINARY_OPERATION",
		"|=": "PATTERN",
		"||": "LOGICAL_OPERATOR",
		"||=": "TYPE_OPERATOR",
		"}": "BLOCK",
		"~": "BINARY_OPERATION",
	},
	"php": {
		"!": "LOGICAL_OPERATOR",
		"!=": "TYPE_OPERATOR",
		"!==": "PATTERN",
		# '"': 'UNKNOWN'  # LOW CONFIDENCE (0.30) for node '"' -> FINALLY
		"#[": "METHOD",
		"$": "WITH",
		"%": "METHOD",
		"%=": "METHOD",
		"&": "SET",
		"&&": "IF",
		"&=": "PATTERN",
		"'": "CHAR",
		"(": "METHOD",
		")": "METHOD",
		"*": "REFERENCE_OPERATOR",
		"**": "PATTERN",
		"**=": "METHOD",
		"*=": "METHOD",
		"+": "REFERENCE_OPERATOR",
		"++": "FOR_IN",
		"+=": "METHOD",
		",": "IF",
		"-": "PATTERN",
		"--": "METHOD",
		"-=": "METHOD",
		"->": "METHOD",
		".": "PATTERN",
		"...": "METHOD",
		".=": "PATTERN",
		"/": "PATTERN",
		"/=": "METHOD",
		":": "METHOD",
		"::": "METHOD",
		";": "IF",
		"<": "CONDITIONAL",
		"<<": "PATTERN",
		"<<<": "PATTERN",
		"<<=": "PATTERN",
		"<=": "CONDITIONAL",
		"<=>": "PATTERN",
		"<>": "WITH",
		"=": "METHOD",
		"==": "PATTERN",
		"===": "PATTERN",
		"=>": "FUNCTION",
		">": "IF",
		">=": "IF",
		">>": "FLOAT",
		">>=": "PATTERN",
		"?": "IF",
		"?->": "METHOD",
		"?>": "PATTERN",
		"??": "NULL",
		"??=": "PATTERN",
		"@": "METHOD",
		"[": "PATTERN",
		"\\": "CHAR",
		"]": "FOR_IN",
		"^": "BINARY_OPERATION",
		"^=": "PATTERN",
		"`": "METHOD",
		"abstract": "WITH",
		"abstract_modifier": "METHOD",
		"and": "LOGICAL_OPERATOR",
		"anonymous_class": "METHOD",
		"anonymous_function": "FUNCTION",
		"anonymous_function_use_clause": "METHOD",
		"argument": "METHOD",
		"arguments": "METHOD",
		"array": "SET",
		"array_creation_expression": "METHOD",
		"array_element_initializer": "METHOD",
		"arrow_function": "FUNCTION",
		"as": "WITH",
		"assignment_expression": "METHOD",
		"attribute": "METHOD",
		"attribute_group": "METHOD",
		"attribute_list": "METHOD",
		"augmented_assignment_expression": "REFERENCE_OPERATOR",
		"base_clause": "METHOD",
		"binary_expression": "PATTERN",
		"bool": "IF",
		"boolean": "IF",
		"bottom_type": "PATTERN",
		"break": "METHOD",
		"break_statement": "METHOD",
		"by_ref": "METHOD",
		"callable": "METHOD",
		"case": "METHOD",
		"case_statement": "METHOD",
		"cast_expression": "METHOD",
		"cast_type": "METHOD",
		"catch": "TRY_BLOCK",
		"catch_clause": "TRY_BLOCK",
		"class": "METHOD",
		"class_constant_access_expression": "METHOD",
		"class_declaration": "METHOD",
		"class_interface_clause": "METHOD",
		"clone": "METHOD",
		"clone_expression": "METHOD",
		"colon_block": "BLOCK",
		"comment": "COMMENT",
		"compound_statement": "IF",
		"conditional_expression": "PATTERN",
		"const": "IF",
		"const_declaration": "IF",
		"const_element": "METHOD",
		"continue": "METHOD",
		"continue_statement": "METHOD",
		"declaration_list": "METHOD",
		"declare": "METHOD",
		"declare_directive": "METHOD",
		"declare_statement": "METHOD",
		"default": "METHOD",
		"default_statement": "METHOD",
		"disjunctive_normal_form_type": "REFERENCE_OPERATOR",
		"do": "IF",
		"do_statement": "METHOD",
		"dynamic_variable_name": "METHOD",
		"echo": "STRING",
		"echo_statement": "METHOD",
		"else": "IF",
		"else_clause": "IF",
		"else_if_clause": "IF",
		"elseif": "IF",
		"empty_statement": "METHOD",
		"encapsed_string": "PATTERN",
		"encoding": "METHOD",
		"enddeclare": "METHOD",
		"endfor": "FOR_IN",
		"endforeach": "FOR_IN",
		"endif": "IF",
		"endswitch": "METHOD",
		"endwhile": "FOR_IN",
		"enum": "SET",
		"enum_case": "METHOD",
		"enum_declaration": "METHOD",
		"enum_declaration_list": "METHOD",
		"error_suppression_expression": "METHOD",
		"escape_sequence": "PATTERN",
		"exit": "METHOD",
		"exit_statement": "METHOD",
		"expression": "METHOD",
		"expression_statement": "IF",
		"extends": "METHOD",
		"false": "BOOLEAN",
		"final": "METHOD",
		"final_modifier": "METHOD",
		"finally": "IF",
		"finally_clause": "IF",
		"float": "FLOAT",
		"fn": "FUNCTION",
		"for": "METHOD",
		"for_statement": "METHOD",
		"foreach": "SET",
		"foreach_statement": "METHOD",
		"formal_parameters": "METHOD",
		"from": "METHOD",
		"function": "FUNCTION",
		"function_call_expression": "METHOD",
		"function_definition": "METHOD",
		"function_static_declaration": "METHOD",
		"global": "METHOD",
		"global_declaration": "METHOD",
		"goto": "PATTERN",
		"goto_statement": "METHOD",
		"heredoc": "STRING",
		"heredoc_body": "WITH",
		"heredoc_end": "WITH",
		"heredoc_start": "WITH",
		"if": "IF",
		"if_statement": "ASSERT",
		"implements": "METHOD",
		"include": "WITH",
		"include_expression": "METHOD",
		"include_once": "WITH",
		"include_once_expression": "METHOD",
		"instanceof": "METHOD",
		"insteadof": "IF",
		"int": "PATTERN",
		"integer": "INTEGER",
		"interface": "METHOD",
		"interface_declaration": "METHOD",
		"intersection_type": "METHOD",
		"iterable": "METHOD",
		"list": "SET",
		"list_literal": "PATTERN",
		"literal": "IF",
		"match": "PATTERN",
		"match_block": "PATTERN",
		"match_condition_list": "PATTERN",
		"match_conditional_expression": "PATTERN",
		"match_default_expression": "PATTERN",
		"match_expression": "PATTERN",
		"member_access_expression": "METHOD",
		"member_call_expression": "METHOD",
		"method_declaration": "METHOD",
		"mixed": "PATTERN",
		"name": "UNKNOWN",
		"named_label_statement": "LABEL",
		"named_type": "TYPE_OPERATOR",
		"namespace": "NAMESPACE",
		"namespace_definition": "METHOD",
		"namespace_name": "NAMESPACE",
		"namespace_use_clause": "METHOD",
		"namespace_use_declaration": "NAMESPACE_DECLARATION",
		"namespace_use_group": "NAMESPACE",
		"new": "WITH",
		"nowdoc": "METHOD",
		"nowdoc_body": "METHOD",
		"nowdoc_string": "DOCSTRING",
		"null": "NULL",
		"nullsafe_member_access_expression": "METHOD",
		"nullsafe_member_call_expression": "METHOD",
		"object_creation_expression": "METHOD",
		"operation": "METHOD",
		"optional_type": "METHOD",
		"or": "REFERENCE_OPERATOR",
		"pair": "SET",
		"parent": "METHOD",
		"parenthesized_expression": "METHOD",
		"php_tag": "BLOCK",
		"primary_expression": "METHOD",
		"primitive_type": "TYPE_OPERATOR",
		"print": "METHOD",
		"print_intrinsic": "IF",
		"private": "METHOD",
		"program": "METHOD",
		"property_declaration": "METHOD",
		"property_element": "METHOD",
		"property_hook": "METHOD",
		"property_hook_list": "METHOD",
		"property_promotion_parameter": "METHOD",
		"protected": "METHOD",
		"public": "METHOD",
		"qualified_name": "METHOD",
		"readonly": "METHOD",
		"readonly_modifier": "METHOD",
		"reference_assignment_expression": "METHOD",
		"reference_modifier": "METHOD",
		"relative_name": "METHOD",
		"relative_scope": "METHOD",
		"require": "IF",
		"require_expression": "METHOD",
		"require_once": "WITH",
		"require_once_expression": "METHOD",
		"return": "METHOD",
		"return_statement": "METHOD",
		"scoped_call_expression": "METHOD",
		"scoped_property_access_expression": "METHOD",
		"self": "METHOD",
		"sequence_expression": "PATTERN",
		"shell_command_expression": "METHOD",
		"simple_parameter": "METHOD",
		"statement": "IF",
		"static": "METHOD",
		"static_modifier": "METHOD",
		"static_variable_declaration": "METHOD",
		"strict_types": "METHOD",
		"string": "BLOCK",
		"string_content": "PATTERN",
		"subscript_expression": "METHOD",
		"switch": "METHOD",
		"switch_block": "BLOCK",
		"switch_statement": "METHOD",
		"text": "WITH",
		"text_interpolation": "PATTERN",
		"throw": "TRY_BLOCK",
		"throw_expression": "METHOD",
		"ticks": "PATTERN",
		"trait": "METHOD",
		"trait_declaration": "METHOD",
		"true": "PATTERN",
		"try": "TRY_BLOCK",
		"try_statement": "TRY_BLOCK",
		"type": "METHOD",
		"type_list": "METHOD",
		"unary_op_expression": "CONDITIONAL",
		"union_type": "METHOD",
		"unset": "METHOD",
		"unset_statement": "METHOD",
		"update_expression": "METHOD",
		"use": "METHOD",
		"use_as_clause": "METHOD",
		"use_declaration": "METHOD",
		"use_instead_of_clause": "METHOD",
		"use_list": "METHOD",
		"var_modifier": "METHOD",
		"variable_name": "METHOD",
		"variadic_parameter": "METHOD",
		"variadic_placeholder": "METHOD",
		"variadic_unpacking": "SET",
		"visibility_modifier": "METHOD",
		"void": "IF",
		"while": "IF",
		"while_statement": "ASSERT",
		"xor": "BINARY_OPERATION",
		"yield": "YIELD",
		"yield_expression": "METHOD",
		"{": "BLOCK",
		"|": "BINARY_OPERATION",
		"|=": "TYPE_OPERATOR",
		"||": "IF",
		"}": "BLOCK",
		"~": "BINARY_OPERATION",
	},
	"python": {
		"!=": "TYPE_OPERATOR",
		"%": "PATTERN",
		"%=": "PATTERN",
		"&": "PATTERN",
		"&=": "PATTERN",
		"(": "METHOD",
		")": "METHOD",
		"*": "PATTERN",
		"**": "PATTERN",
		"**=": "METHOD",
		"*=": "PATTERN",
		"+": "SET",
		"+=": "METHOD",
		",": "IF",
		"-": "SET",
		"-=": "METHOD",
		"->": "FUNCTION",
		".": "METHOD",
		"/": "PATTERN",
		"//": "PATTERN",
		"//=": "PATTERN",
		"/=": "METHOD",
		":": "METHOD",
		":=": "TUPLE",
		";": "BLOCK",
		"<": "SET",
		"<<": "PATTERN",
		"<<=": "PATTERN",
		"<=": "TUPLE",
		"<>": "SET",
		"=": "PATTERN",
		"==": "SET",
		">": "FOR",
		">=": "REFERENCE_OPERATOR",
		">>": "PATTERN",
		">>=": "PATTERN",
		"@": "PATTERN",
		"@=": "PATTERN",
		"[": "SET",
		"\\": "CHAR",
		"]": "TUPLE",
		"^": "BINARY_OPERATION",
		"^=": "BINARY_OPERATOR_GENERIC",
		"_": "METHOD",
		"__future__": "BLOCK",
		"_compound_statement": "IF",
		"_simple_statement": "METHOD",
		"aliased_import": "IMPORT",
		"and": "SET",
		"argument_list": "METHOD",
		"as": "METHOD",
		"as_pattern": "PATTERN",
		"as_pattern_target": "PATTERN",
		"assert": "ASSERT",
		"assert_statement": "ASSERT",
		"assignment": "METHOD",
		"async": "FUNCTION",
		"attribute": "METHOD",
		"augmented_assignment": "METHOD",
		"await": "FUNCTION",
		"binary_operator": "TYPE_OPERATOR",
		"block": "METHOD",
		"boolean_operator": "TYPE_OPERATOR",
		"break": "IF",
		"break_statement": "IF",
		"call": "METHOD",
		"case": "ASSERT",
		"case_clause": "PATTERN",
		"case_pattern": "PATTERN",
		"chevron": "PATTERN",
		"class": "WITH",
		"class_definition": "METHOD",
		"class_pattern": "PATTERN",
		"comment": "METHOD",
		"comparison_operator": "METHOD",
		"complex_pattern": "PATTERN",
		"concatenated_string": "PATTERN",
		"conditional_expression": "IF",
		"constrained_type": "IF",
		"continue": "IF",
		"continue_statement": "METHOD",
		"decorated_definition": "BLOCK",
		"decorator": "FUNCTION",
		"def": "BLOCK",
		"default_parameter": "METHOD",
		"del": "SET",
		"delete_statement": "METHOD",
		"dict_pattern": "PATTERN",
		"dictionary": "SET",
		"dictionary_comprehension": "BLOCK",
		"dictionary_splat": "METHOD",
		"dictionary_splat_pattern": "PATTERN",
		"dotted_name": "METHOD",
		"elif": "IF",
		"elif_clause": "IF",
		"ellipsis": "WITH",
		"else": "IF",
		"else_clause": "IF",
		"escape_interpolation": "PATTERN",
		"escape_sequence": "PATTERN",
		"except": "TRY_BLOCK",
		"except*": "METHOD",
		"except_clause": "IF",
		"except_group_clause": "METHOD",
		"exec": "METHOD",
		"exec_statement": "METHOD",
		"expression": "METHOD",
		"expression_list": "METHOD",
		"expression_statement": "IF",
		"false": "BOOLEAN",
		"finally": "IF",
		"finally_clause": "IF",
		"float": "FLOAT",
		"for": "FOR",
		"for_in_clause": "IF",
		"for_statement": "IF",
		"format_expression": "PATTERN",
		"format_specifier": "PATTERN",
		"from": "LOOP",
		"function_definition": "IF",
		"future_import_statement": "IF",
		"generator_expression": "PATTERN",
		"generic_type": "METHOD",
		"global": "METHOD",
		"global_statement": "METHOD",
		"identifier": "METHOD",
		"if": "IF",
		"if_clause": "IF",
		"if_statement": "IF",
		"import": "METHOD",
		"import_from_statement": "METHOD",
		"import_prefix": "IMPORT",
		"import_statement": "METHOD",
		"in": "SET",
		"integer": "FLOAT",
		"interpolation": "PATTERN",
		"is": "METHOD",
		"is not": "PATTERN",
		"keyword_argument": "METHOD",
		"keyword_pattern": "PATTERN",
		"keyword_separator": "METHOD",
		"lambda": "METHOD",
		"lambda_parameters": "METHOD",
		"line_continuation": "PATTERN",
		"list": "SET",
		"list_comprehension": "SET",
		"list_pattern": "PATTERN",
		"list_splat": "PATTERN",
		"list_splat_pattern": "PATTERN",
		"match": "PATTERN",
		"match_statement": "PATTERN",
		"member_type": "METHOD",
		"module": "MODULE",
		"named_expression": "PATTERN",
		"none": "NULL",
		"nonlocal": "METHOD",
		"nonlocal_statement": "IF",
		"not": "CONDITIONAL",
		"not in": "METHOD",
		"not_operator": "CONDITIONAL",
		"or": "BOOLEAN",
		"pair": "SET",
		"parameter": "METHOD",
		"parameters": "METHOD",
		"parenthesized_expression": "METHOD",
		"parenthesized_list_splat": "PATTERN",
		"pass": "IF",
		"pass_statement": "IF",
		"pattern": "PATTERN",
		"pattern_list": "PATTERN",
		"positional_separator": "METHOD",
		"primary_expression": "METHOD",
		"print": "FUNCTION",
		"print_statement": "METHOD",
		"raise": "TRY_BLOCK",
		"raise_statement": "METHOD",
		"relative_import": "IMPORT",
		"return": "FUNCTION",
		"return_statement": "IF",
		"set": "SET",
		"set_comprehension": "SET",
		"slice": "SET",
		"splat_pattern": "PATTERN",
		"splat_type": "METHOD",
		"string": "STRING",
		"string_content": "PATTERN",
		"string_end": "STRING",
		"string_start": "STRING",
		"subscript": "METHOD",
		"true": "BOOLEAN",
		"try": "METHOD",
		"try_statement": "IF",
		"tuple": "SET",
		"tuple_pattern": "PATTERN",
		"type": "METHOD",
		"type_alias_statement": "METHOD",
		"type_conversion": "PATTERN",
		"type_parameter": "METHOD",
		"typed_default_parameter": "METHOD",
		"typed_parameter": "METHOD",
		"unary_operator": "CONDITIONAL",
		"union_pattern": "PATTERN",
		"union_type": "METHOD",
		"while": "FOR_IN",
		"while_statement": "METHOD",
		"wildcard_import": "MODULE",
		"with": "METHOD",
		"with_clause": "METHOD",
		"with_item": "METHOD",
		"with_statement": "METHOD",
		"yield": "METHOD",
		"{": "LITERAL",
		"|": "TYPE_OPERATOR",
		"|=": "BINARY_OPERATOR_GENERIC",
		"}": "PATTERN",
		"~": "TYPE_OPERATOR",
	},
	"rust": {
		"!": "PATTERN",
		"!=": "PATTERN",
		# '"': 'UNKNOWN'  # LOW CONFIDENCE (0.30) for node '"' -> FINALLY
		"#": "METHOD",
		"$": "BLOCK",
		"%": "PATTERN",
		"%=": "PATTERN",
		"&": "PATTERN",
		"&&": "CONDITIONAL",
		"&=": "PATTERN",
		"'": "CHAR",
		"(": "METHOD",
		")": "PATTERN",
		"*": "REFERENCE_OPERATOR",
		"*/": "BLOCK",
		"*=": "PATTERN",
		"+": "REFERENCE_OPERATOR",
		"+=": "PATTERN",
		",": "IF",
		"-": "REFERENCE_OPERATOR",
		"-=": "PATTERN",
		"->": "PATTERN",
		".": "METHOD",
		"..": "PATTERN",
		"...": "PATTERN",
		"..=": "PATTERN",
		"/": "REFERENCE_OPERATOR",
		"/*": "PATTERN",
		"//": "PATTERN",
		"/=": "PATTERN",
		":": "PATTERN",
		"::": "MODULE",
		";": "PATTERN",
		"<": "WITH",
		"<<": "FLOAT",
		"<<=": "PATTERN",
		"<=": "WITH",
		"=": "PATTERN",
		"==": "PATTERN",
		"=>": "METHOD",
		">": "IF",
		">=": "WITH",
		">>": "FLOAT",
		">>=": "PATTERN",
		"?": "METHOD",
		"@": "METHOD",
		"[": "PATTERN",
		"]": "PATTERN",
		"^": "PATTERN",
		"^=": "TYPE_OPERATOR",
		"_": "PATTERN",
		"_declaration_statement": "IF",
		"_expression": "METHOD",
		"_literal": "LITERAL",
		"_literal_pattern": "PATTERN",
		"_pattern": "PATTERN",
		"_type": "PATTERN",
		"abstract_type": "METHOD",
		"arguments": "METHOD",
		"array_expression": "METHOD",
		"array_type": "TYPE_OPERATOR",
		"as": "METHOD",
		"assignment_expression": "METHOD",
		"associated_type": "PATTERN",
		"async": "ASYNC",
		"async_block": "FUNCTION",
		"attribute": "METHOD",
		"attribute_item": "METHOD",
		"await": "METHOD",
		"await_expression": "METHOD",
		"base_field_initializer": "METHOD",
		"binary_expression": "PATTERN",
		"block": "BLOCK",
		"block_comment": "METHOD",
		"boolean_literal": "PATTERN",
		"bounded_type": "PATTERN",
		"bracketed_type": "PATTERN",
		"break": "PATTERN",
		"break_expression": "PATTERN",
		"call_expression": "FUNCTION",
		"captured_pattern": "PATTERN",
		"char_literal": "PATTERN",
		"closure_expression": "PATTERN",
		"closure_parameters": "METHOD",
		"compound_assignment_expr": "METHOD",
		"const": "WITH",
		"const_block": "PATTERN",
		"const_item": "PATTERN",
		"const_parameter": "METHOD",
		"continue": "PATTERN",
		"continue_expression": "PATTERN",
		"crate": "MODULE",
		"declaration_list": "METHOD",
		"default": "PATTERN",
		"doc_comment": "METHOD",
		"dyn": "METHOD",
		"dynamic_type": "PATTERN",
		"else": "IF",
		"else_clause": "IF",
		"empty_statement": "PATTERN",
		"enum": "PATTERN",
		"enum_item": "PATTERN",
		"enum_variant": "PATTERN",
		"enum_variant_list": "PATTERN",
		"escape_sequence": "PATTERN",
		"expr": "PATTERN",
		"expr_2021": "PATTERN",
		"expression_statement": "METHOD",
		"extern": "EXPORT",
		"extern_crate_declaration": "METHOD",
		"extern_modifier": "METHOD",
		"false": "PATTERN",
		"field_declaration": "METHOD",
		"field_declaration_list": "METHOD",
		"field_expression": "METHOD",
		"field_identifier": "METHOD",
		"field_initializer": "METHOD",
		"field_initializer_list": "METHOD",
		"field_pattern": "PATTERN",
		"float_literal": "FLOAT",
		"fn": "WITH",
		"for": "METHOD",
		"for_expression": "PATTERN",
		"for_lifetimes": "FOR_IN",
		"foreign_mod_item": "MODULE",
		"fragment_specifier": "METHOD",
		"function_item": "METHOD",
		"function_modifiers": "METHOD",
		"function_signature_item": "METHOD",
		"function_type": "FUNCTION",
		"gen": "PATTERN",
		"gen_block": "PATTERN",
		"generic_function": "METHOD",
		"generic_pattern": "PATTERN",
		"generic_type": "PATTERN",
		"generic_type_with_turbofish": "PATTERN",
		"higher_ranked_trait_bound": "PATTERN",
		"ident": "PATTERN",
		"identifier": "PATTERN",
		"if": "PATTERN",
		"if_expression": "PATTERN",
		"impl": "METHOD",
		"impl_item": "PATTERN",
		"in": "PATTERN",
		"index_expression": "PATTERN",
		"inner_attribute_item": "PATTERN",
		"inner_doc_comment_marker": "METHOD",
		"integer_literal": "TUPLE",
		"item": "METHOD",
		"label": "PATTERN",
		"let": "PATTERN",
		"let_chain": "PATTERN",
		"let_condition": "IF",
		"let_declaration": "METHOD",
		"lifetime": "PATTERN",
		"lifetime_parameter": "METHOD",
		"line_comment": "COMMENT",
		"literal": "PATTERN",
		"loop": "PATTERN",
		"loop_expression": "PATTERN",
		"macro_definition": "METHOD",
		"macro_invocation": "METHOD",
		"macro_rule": "PATTERN",
		"macro_rules!": "METHOD",
		"match": "PATTERN",
		"match_arm": "PATTERN",
		"match_block": "PATTERN",
		"match_expression": "PATTERN",
		"match_pattern": "PATTERN",
		"meta": "METHOD",
		"metavariable": "METHOD",
		"mod": "PATTERN",
		"mod_item": "METHOD",
		"move": "METHOD",
		"mut_pattern": "PATTERN",
		"mutable_specifier": "PATTERN",
		"negative_literal": "LITERAL",
		"never_type": "NULL",
		"or_pattern": "PATTERN",
		"ordered_field_declaration_list": "METHOD",
		"outer_doc_comment_marker": "METHOD",
		"parameter": "METHOD",
		"parameters": "METHOD",
		"parenthesized_expression": "METHOD",
		"pat": "PATTERN",
		"pat_param": "METHOD",
		"path": "METHOD",
		"pointer_type": "PATTERN",
		"primitive_type": "BINARY",
		"pub": "WITH",
		"qualified_type": "METHOD",
		"range_expression": "PATTERN",
		"range_pattern": "PATTERN",
		"raw": "PATTERN",
		"raw_string_literal": "PATTERN",
		"ref": "REFERENCE_OPERATOR",
		"ref_pattern": "PATTERN",
		"reference_expression": "PATTERN",
		"reference_pattern": "PATTERN",
		"reference_type": "REFERENCE_OPERATOR",
		"remaining_field_pattern": "PATTERN",
		"removed_trait_bound": "PATTERN",
		"return": "PATTERN",
		"return_expression": "PATTERN",
		"scoped_identifier": "PATTERN",
		"scoped_type_identifier": "PATTERN",
		"scoped_use_list": "PATTERN",
		"self": "METHOD",
		"self_parameter": "METHOD",
		"shebang": "BLOCK",
		"shorthand_field_identifier": "METHOD",
		"shorthand_field_initializer": "METHOD",
		"slice_pattern": "PATTERN",
		"source_file": "PATTERN",
		"static": "PATTERN",
		"static_item": "METHOD",
		"stmt": "METHOD",
		"string_content": "STRING",
		"string_literal": "PATTERN",
		"struct": "PATTERN",
		"struct_expression": "METHOD",
		"struct_item": "METHOD",
		"struct_pattern": "PATTERN",
		"super": "METHOD",
		"token_binding_pattern": "PATTERN",
		"token_repetition": "PATTERN",
		"token_repetition_pattern": "PATTERN",
		"token_tree": "PATTERN",
		"token_tree_pattern": "PATTERN",
		"trait": "METHOD",
		"trait_bounds": "METHOD",
		"trait_item": "METHOD",
		"true": "BOOLEAN",
		"try": "TRY_BLOCK",
		"try_block": "PATTERN",
		"try_expression": "METHOD",
		"tt": "PATTERN",
		"tuple_expression": "PATTERN",
		"tuple_pattern": "PATTERN",
		"tuple_struct_pattern": "PATTERN",
		"tuple_type": "SET",
		"ty": "PATTERN",
		"type": "PATTERN",
		"type_arguments": "METHOD",
		"type_binding": "PATTERN",
		"type_cast_expression": "PATTERN",
		"type_identifier": "PATTERN",
		"type_item": "METHOD",
		"type_parameter": "METHOD",
		"type_parameters": "METHOD",
		"unary_expression": "CONDITIONAL",
		"union": "SET",
		"union_item": "SET",
		"unit_expression": "PATTERN",
		"unit_type": "PATTERN",
		"unsafe": "METHOD",
		"unsafe_block": "METHOD",
		"use": "METHOD",
		"use_as_clause": "METHOD",
		"use_bounds": "PATTERN",
		"use_declaration": "METHOD",
		"use_list": "SET",
		"use_wildcard": "PATTERN",
		"variadic_parameter": "METHOD",
		"vis": "METHOD",
		"visibility_modifier": "METHOD",
		"where": "METHOD",
		"where_clause": "METHOD",
		"where_predicate": "PATTERN",
		"while": "IF",
		"while_expression": "PATTERN",
		"yield": "YIELD",
		"yield_expression": "PATTERN",
		"{": "PATTERN",
		"|": "PATTERN",
		"|=": "PATTERN",
		"||": "PATTERN",
		"}": "PATTERN",
	},
	"typescript": {
		"!": "TYPE_OPERATOR",
		"!=": "TYPE_OPERATOR",
		"!==": "TYPE_OPERATOR",
		# '"': 'UNKNOWN'  # LOW CONFIDENCE (0.30) for node '"' -> FINALLY
		"${": "PATTERN",
		"%": "METHOD",
		"%=": "METHOD",
		"&": "TYPE_OPERATOR",
		"&&": "IF",
		"&&=": "IF",
		"&=": "PATTERN",
		"'": "CHAR",
		"(": "FUNCTION",
		")": "FUNCTION",
		"*": "PATTERN",
		"**": "PATTERN",
		"**=": "PATTERN",
		"*=": "PATTERN",
		"+": "SET",
		"++": "METHOD",
		"+=": "METHOD",
		"+?:": "METHOD",
		",": "IF",
		"-": "TYPE_OPERATOR",
		"--": "FUNCTION",
		"-=": "TYPE_OPERATOR",
		"-?:": "METHOD",
		".": "PATTERN",
		"...": "PATTERN",
		"/": "TYPE_OPERATOR",
		"/=": "TYPE_OPERATOR",
		":": "TYPE_OPERATOR",
		";": "PATTERN",
		"<": "TYPE_OPERATOR",
		"<<": "PATTERN",
		"<<=": "PATTERN",
		"<=": "REFERENCE_OPERATOR",
		"=": "TYPE_OPERATOR",
		"==": "TYPE_OPERATOR",
		"===": "TYPE_OPERATOR",
		"=>": "TYPE_OPERATOR",
		">": "TYPE_OPERATOR",
		">=": "REFERENCE_OPERATOR",
		">>": "FUNCTION",
		">>=": "PATTERN",
		">>>": "FUNCTION",
		">>>=": "TYPE_OPERATOR",
		"?": "PATTERN",
		"?.": "METHOD",
		"?:": "TYPE_OPERATOR",
		"??": "NULL",
		"??=": "NULL",
		"@": "METHOD",
		"[": "PATTERN",
		"]": "PATTERN",
		"^": "TYPE_OPERATOR",
		"^=": "TYPE_OPERATOR",
		"`": "PATTERN",
		"abstract": "METHOD",
		"abstract_class_declaration": "METHOD",
		"abstract_method_signature": "METHOD",
		"accessibility_modifier": "METHOD",
		"accessor": "METHOD",
		"adding_type_annotation": "METHOD",
		"ambient_declaration": "IF",
		"any": "IF",
		"arguments": "METHOD",
		"array": "SET",
		"array_pattern": "PATTERN",
		"array_type": "TYPE_OPERATOR",
		"arrow_function": "FUNCTION",
		"as": "METHOD",
		"as_expression": "METHOD",
		"assert": "PATTERN",
		"asserts": "METHOD",
		"asserts_annotation": "METHOD",
		"assignment_expression": "METHOD",
		"assignment_pattern": "PATTERN",
		"async": "FUNCTION",
		"augmented_assignment_expression": "METHOD",
		"await": "AWAIT",
		"await_expression": "FUNCTION",
		"binary_expression": "PATTERN",
		"boolean": "BOOLEAN",
		"break": "IF",
		"break_statement": "METHOD",
		"call_expression": "METHOD",
		"call_signature": "METHOD",
		"case": "METHOD",
		"catch": "TRY_BLOCK",
		"catch_clause": "METHOD",
		"class": "METHOD",
		"class_body": "METHOD",
		"class_declaration": "METHOD",
		"class_heritage": "METHOD",
		"class_static_block": "METHOD",
		"comment": "COMMENT",
		"computed_property_name": "METHOD",
		"conditional_type": "IF",
		"const": "WITH",
		"constraint": "METHOD",
		"construct_signature": "METHOD",
		"constructor_type": "METHOD",
		"continue": "PATTERN",
		"continue_statement": "WITH",
		"debugger": "METHOD",
		"debugger_statement": "METHOD",
		"declaration": "METHOD",
		"declare": "METHOD",
		"decorator": "METHOD",
		"default": "METHOD",
		"default_type": "METHOD",
		"delete": "METHOD",
		"do": "METHOD",
		"do_statement": "IF",
		"else": "IF",
		"else_clause": "IF",
		"empty_statement": "EMPTY",
		"enum": "SET",
		"enum_assignment": "METHOD",
		"enum_body": "METHOD",
		"enum_declaration": "METHOD",
		"escape_sequence": "PATTERN",
		"existential_type": "NULL",
		"export": "EXPORT",
		"export_clause": "EXPORT",
		"export_specifier": "EXPORT",
		"export_statement": "IMPORT",
		"expression": "METHOD",
		"expression_statement": "IF",
		"extends": "METHOD",
		"extends_clause": "METHOD",
		"extends_type_clause": "METHOD",
		"false": "BOOLEAN",
		"finally": "IF",
		"finally_clause": "IF",
		"flow_maybe_type": "METHOD",
		"for": "PATTERN",
		"for_in_statement": "METHOD",
		"for_statement": "METHOD",
		"formal_parameters": "METHOD",
		"from": "IMPORT",
		"function": "FUNCTION",
		"function_declaration": "FUNCTION",
		"function_expression": "METHOD",
		"function_signature": "METHOD",
		"function_type": "FUNCTION",
		"generator_function": "FUNCTION",
		"generator_function_declaration": "METHOD",
		"generic_type": "METHOD",
		"get": "METHOD",
		"global": "METHOD",
		"hash_bang_line": "PATTERN",
		"html_comment": "COMMENT",
		"identifier": "METHOD",
		"if": "IF",
		"if_statement": "ASSERT",
		"implements": "METHOD",
		"implements_clause": "METHOD",
		"import": "MODULE",
		"import_alias": "IMPORT",
		"import_attribute": "METHOD",
		"import_clause": "IF",
		"import_require_clause": "IMPORT",
		"import_specifier": "METHOD",
		"import_statement": "METHOD",
		"in": "METHOD",
		"index_signature": "METHOD",
		"index_type_query": "METHOD",
		"infer": "METHOD",
		"infer_type": "METHOD",
		"instanceof": "METHOD",
		"instantiation_expression": "METHOD",
		"interface": "METHOD",
		"interface_body": "METHOD",
		"interface_declaration": "METHOD",
		"internal_module": "MODULE",
		"intersection_type": "TYPE_OPERATOR",
		"is": "IF",
		"keyof": "TYPE_OPERATOR",
		"labeled_statement": "IF",
		"let": "IF",
		"lexical_declaration": "METHOD",
		"literal_type": "LITERAL",
		"lookup_type": "METHOD",
		"mapped_type_clause": "METHOD",
		"member_expression": "METHOD",
		"meta": "METHOD",
		"meta_property": "METHOD",
		"method_definition": "METHOD",
		"method_signature": "METHOD",
		"module": "MODULE_DECLARATION",
		"named_imports": "IMPORT",
		"namespace": "NAMESPACE",
		"namespace_export": "EXPORT",
		"namespace_import": "NAMESPACE",
		"nested_identifier": "PATTERN",
		"nested_type_identifier": "PATTERN",
		"never": "IF",
		"new": "METHOD",
		"new_expression": "PATTERN",
		"non_null_expression": "NULL",
		"null": "NULL",
		"number": "PATTERN",
		"object": "METHOD",
		"object_assignment_pattern": "METHOD",
		"object_pattern": "PATTERN",
		"object_type": "METHOD",
		"of": "IF",
		"omitting_type_annotation": "METHOD",
		"opting_type_annotation": "METHOD",
		"optional_chain": "METHOD",
		"optional_parameter": "METHOD",
		"optional_type": "METHOD",
		"override": "METHOD",
		"override_modifier": "METHOD",
		"pair": "SET",
		"pair_pattern": "PATTERN",
		"parenthesized_expression": "PATTERN",
		"parenthesized_type": "PATTERN",
		"pattern": "PATTERN",
		"predefined_type": "PATTERN",
		"primary_expression": "METHOD",
		"primary_type": "METHOD",
		"private": "METHOD",
		"private_property_identifier": "METHOD",
		"program": "METHOD",
		"property_identifier": "METHOD",
		"property_signature": "METHOD",
		"protected": "METHOD",
		"public": "METHOD",
		"public_field_definition": "METHOD",
		"readonly": "METHOD",
		"readonly_type": "METHOD",
		"regex": "PATTERN",
		"regex_flags": "PATTERN",
		"regex_pattern": "PATTERN",
		"require": "MODULE",
		"required_parameter": "METHOD",
		"rest_pattern": "PATTERN",
		"rest_type": "METHOD",
		"return": "METHOD",
		"return_statement": "ASSERT",
		"satisfies": "IF",
		"satisfies_expression": "ASSERT",
		"sequence_expression": "PATTERN",
		"set": "METHOD",
		"shorthand_property_identifier": "METHOD",
		"shorthand_property_identifier_pattern": "PATTERN",
		"spread_element": "METHOD",
		"statement": "IF",
		"statement_block": "BLOCK",
		"statement_identifier": "METHOD",
		"static": "METHOD",
		"string": "PATTERN",
		"string_fragment": "PATTERN",
		"subscript_expression": "METHOD",
		"super": "METHOD",
		"switch": "METHOD",
		"switch_body": "METHOD",
		"switch_case": "METHOD",
		"switch_default": "METHOD",
		"switch_statement": "METHOD",
		"symbol": "PATTERN",
		"target": "METHOD",
		"template_literal_type": "TEMPLATE",
		"template_string": "PATTERN",
		"template_substitution": "PATTERN",
		"template_type": "METHOD",
		"ternary_expression": "CONDITIONAL",
		"this": "METHOD",
		"this_type": "METHOD",
		"throw": "TRY_BLOCK",
		"throw_statement": "METHOD",
		"true": "BOOLEAN",
		"try": "TRY_BLOCK",
		"try_statement": "TRY_BLOCK",
		"tuple_type": "SET",
		"type": "TYPE_OPERATOR",
		"type_alias_declaration": "WITH",
		"type_annotation": "METHOD",
		"type_arguments": "METHOD",
		"type_assertion": "IF",
		"type_identifier": "METHOD",
		"type_parameter": "METHOD",
		"type_parameters": "METHOD",
		"type_predicate": "PATTERN",
		"type_predicate_annotation": "METHOD",
		"type_query": "PATTERN",
		"typeof": "METHOD",
		"unary_expression": "CONDITIONAL",
		"undefined": "NULL",
		"union_type": "PATTERN",
		"unique symbol": "SET",
		"unknown": "PATTERN",
		"update_expression": "METHOD",
		"using": "METHOD",
		"var": "IF",
		"variable_declaration": "METHOD",
		"variable_declarator": "METHOD",
		"void": "IF",
		"while": "METHOD",
		"while_statement": "IF",
		"with": "IF",
		"with_statement": "IF",
		"yield": "YIELD",
		"yield_expression": "METHOD",
		"{": "BLOCK",
		"{|": "PATTERN",
		"|": "BINARY_OPERATION",
		"|=": "SET",
		"||": "IF",
		"||=": "REFERENCE_OPERATOR",
		"|}": "PATTERN",
		"}": "BLOCK",
		"~": "TYPE_OPERATOR",
	},
}
